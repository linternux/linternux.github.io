var store = [{
        "title": "sadm_daily_report.sh",
        "excerpt":"This script produce web reports of the last 24 hrs activities and email them to the sysadmin. It run automatically early every morning from the SADMIN server crontab (/etc/cron.d/sadm_server), but you can also be run it manually when desired. It can only be run on the SADMIN server. $ sudo $SADMIN/bin/sadm_daily_report.sh [-v] [-h] [-b] [-r] [-s] [-d 0-9]  DESCRIPTION The script produce three reports, each of them is sent to the email(s) defined by the field ‘SADM_MAIL_ADDR’ defined in the SADMIN configuration file ($SADMIN/cfg/sadmin.cfg). It can only be run on the SADMIN server (Not on a SADMIN client). The reports are also accessible via the web interface. If the package ‘wkhtmltopdf’ is present on the SADMIN server (It should have been installed by the setup process), a PDF version of each report is also attached to the email. If one of the three report is not desired, you can use the ‘-r’, ‘-b’ or the ‘-s’ command line switch to disable the desired report (email). Note that only the actives systems will appear on these reports. The scripts report:    The running scripts are listed first, then the scripts that terminated with an error and finally all the scripts grouped by system. So it give you view of the statistics of each script (start time, end time, elapse time,…) of each systems sorted and grouped by name. When something look different than the normal, like the alert group used is different than the default group or the last execution date of a script is more than thirty days, it will be shown with a yellow background.  You can also view the log of each script just by clicking on the script name.  The same report is also accessible in the heading of any of the “Scripts Status” web pages.The Daily backup report:    This report present the last execution statistics of all the daily backup script (sadm_backup.sh) for each systems. Since the daily backup should have been taken during the night, they should all have the same execution date. If this is not the case, then the execution date cell will have a yellow background, to advise you that there may be a problem with the backup on that system.  The daily backup report is also accessible in the heading of the “Daily Backup Status” web page.  If you want to change the backup schedule of a particular system, just click on the “Schedule Activated” cell of the desired system.  If you want to see the log of the backup, click on the “Status” cell of the desired system.The Rear system image backup:    The ReaR report, show you the last ReaR backup execution result of each systems.  If a backup last execution date is older than 7 days, the date cell of that backup will have a yellow background. If the current backup size and the  previous backup differ than more than 50% they will have a yellow background as well. This may tell you that your backup have greater than expected and you may want to take a look at it.  If you want to change the backup schedule of a particular system just click on the “Schedule Activated” cell of the desired system.  The ReaR daily report is also accessible in the heading of the “ReaR Backup Schedule Status” web page.  If you want to see the log of the backup, just click on the “Status” cell of the desired system.  Excluding Servers or/and Scripts from the reports:          At the beginning of the script you will find a section defining two variables named “SCRIPTS” and “SERVERS”. You can used them to exclude some scripts from the “Daily Scripts Report” by specifying them in the “SCRIPTS” variable.      To exclude server(s) from ALL the reports, you can specify them in the “SERVERS” variable. Server name used MUST not include the domain name.      # Exclude template scripts and demo scripts.SCRIPTS=\"sadm_template sadmlib_std_demo\"    # Exclude System Startup/Shutdown Script for Daily scripts reportSCRIPTS=\"$SCRIPTS sadm_startup sadm_shutdown\"# Server excluded from ALL Daily Report (Backup, Rear and Scripts)SERVERS=\"server1 server2\"EXECUTION EXAMPLE # sadm_daily_report.shSun Jan 17 14:39:39 EST 2021 - sadm_daily_report.sh V1.20 - SADM Lib. V3.64Server Name: robin.batcave.com - Type: LINUXCENTOS 7.9.2009 Kernel 3.10.0-1160.11.1.el7.x86_64==================================================Creating the Daily Backup Report[ OK ] Mount batnas.batcave.com:/volume1/backup_linux /mnt/daily_report[ OK ] Create Backup Web Page.[ OK ] Unmount directory /mnt/daily_report[ OK ] Daily Backup Report sent to batman@batcave.comEnd of Daily Backup Report ...Creating the ReaR Backup Report[ OK ] Mount batnas.batcave.com:/volume1/backup_rear /mnt/daily_report[ OK ] Unmount directory /mnt/daily_report[ OK ] ReaR Backup Report sent to batman@batcave.comEnd of the ReaR Backup Report ...Creating the Daily Script Report[ OK ] Create Script Web Page.[ OK ] No script actually running.[ OK ] No script terminated with error[ OK ] Scripts grouped by server page generated[ OK ] Script report sent to batman@batcave.comEnd of the Script Report ...==================================================Script exit code is 0 (Success) and execution time is 00:00:27History (/sadmin/dat/rch/robin_sadm_daily_report.rch) trim to 35 lines ($SADM_MAX_RCLINE=35).Script will send an alert only when it terminate with error ($SADM_ALERT_TYPE=1).Script succeeded, no alert will be send to 'default' alert group.New log (/sadmin/log/robin_sadm_daily_report.log) created ($SADM_LOG_APPEND='N').End of sadm_daily_report.sh - Sun Jan 17 14:40:02 EST 2021==========================================================================OPTIONS             Options      Description                  -d      Set Debug level from 0 to 9 (Default is 0)              -h      Display this help and exit.              -v      Output version information and exit.              -r      Don’t produce the ReaR backup report              -b      Don’t produce the Daily backup report              -s      Don’t produce the Scripts report      REQUIREMENTS   Environment variable ‘SADMIN’ need to be defined, it specify the root directory of the SADMIN tools (normally /opt/sadmin).          It should be already done, the setup script have updated the /etc/profile.d/sadmin.sh and then /etc/environment files.        The SADMIN main configuration file, is needed and it’s loaded in memory at the beginning of every scripts.          This file should already exist and contains your SADMIN configuration and preference setting.        SADMIN Tools shell library, “$SADMIN/lib/sadmlib.sh”.EXIT STATUS             Exit Code      Description                  0      An exit status of zero indicates success.              1      Failure is indicated by a nonzero value, typically ‘1’.      AUTHOR Jacques DuplessisAny suggestions or bug report can be submitted at the support page COPYRIGHT Copyright © 2021 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or laterThis is free software, you are free to change and redistribute it. There is NO WARRANTY to the extent permitted by law. SEE ALSO The Daily Backup Script - sadm_backup.sh ","categories": ["sadm_scripts","linux"],
        "tags": ["manpage","script"],
        "url": "/sadm_scripts/linux/sadm-daily-report/"
      },{
        "title": "Epoch time date calculation",
        "excerpt":"In the Unix/Linux world we always come across at one point with the term “epoch time”. The epoch time is actually the number of seconds elapsed since midnight of January 1, 1970. Some application record the date and time in “epoch time”. Squid proxy server, for an example will record date and time entries in its log in epoch time. I think we will all agree, that working with this kind of date format is not very meaningful for us. So, if you ever need to convert an epoch time format to a more readable format, here are some example using the bash shell. Convert epoch time to date format # date -d @1221256800 \"+%Y-%m-%d %T\" 2008-09-13 00:00:00Convert date to epoch time # date -d \"20080913\" +%s\" 1221256800","categories": ["Scripting"],
        "tags": ["epoch time"],
        "url": "/index.php/2009/04/08/epoch-time-date-calculation/"
      },{
        "title": "Identify what network port is eth0 ?",
        "excerpt":"You have two network cables plug in the back of a server and you want to know which one is eth0? Use the following command and the interface light will start blinking (for 10 seconds) on the chosen adapter.   # ethtool -p eth0 10 This command can be run without disturbing the traffic on the interface. ","categories": ["Network"],
        "tags": ["ethtool"],
        "url": "/index.php/2009/04/12/identify-what-network-port-is-eth0/"
      },{
        "title": "Doing more with less",
        "excerpt":"We usually use the “less” command to browse the content of a text file. We use the [Page-Up], [Page-Down], [Down-Arrow], [Up-Arrow] keys to move within the file, but did you know that you can do more with the less command ? You can see the content of a rpm file # less flash-plugin-9.0.124.0-release.i386.rpm Name        : flash-plugin                 Relocations: (not relocatable) Version     : 9.0.124.0                    Vendor: Adobe Systems Inc. Release     : release                      Build Date: Tue 25 Mar 2008 12:21:32 PM EDT Install Date: (not installed)              Build Host: fplayerbuild2-lnx.macromedia.com Group       : Applications/Internet        Source RPM: flash-plugin-9.0.124.0-release.src.rpm Size        : 8161247                      License: Commercial Signature   : (none) Packager    : Adobe Systems Inc. URL         : http://www.adobe.com/downloads/ Summary     : Adobe Flash Player 7.0drwxr-xr-x     2 root    root        0 Mar 25  2008 /usr/lib/flash-plugin -rw-r--r--    1 root    root    34516 Mar 24  2008 /usr/lib/flash-plugin/LICENSE -rw-r--r--    1 root    root     3180 Mar 24  2008 /usr/lib/flash-plugin/README -rwxr--r--    1 root    root     1367 Mar 24  2008 /usr/lib/flash-plugin/homecleanup -rwxr-xr-x    1 root    root   115888 Mar 25  2008 /usr/lib/flash-plugin/libflashplayer.so -rwxr--r--    1 root    root     3116 Mar 24  2008 /usr/lib/flash-plugin/setup drwxr-xr-x    2 root    root        0 Mar 25  2008 /usr/share/doc/flash-plugin-9.0.124.0 -rw-r--r--    1 root    root     3180 Mar 25  2008 /usr/share/doc/flash-plugin-9.0.124.0/readme.txt (END)View the content of zip file : $ less StudioPress.zipArchive:  StudioPress.zip   196759 bytes   42 filesdrwxr-xr-x  2.3 unx        0 bx stor 17-Sep-08 09:05 StudioPress/-rw-r--r--  2.3 unx     3848 tx defN 14-Jan-08 09:05 StudioPress/comments.php-rw-r--r--  2.3 unx      231 tx defN 14-Jan-08 09:05 StudioPress/searchform.php-rw-r--r--  2.3 unx      169 tx defN  4-Feb-08 09:44 StudioPress/adsense_top.php-rw-r--r--  2.3 unx     1393 tx defN  5-Feb-08 06:50 StudioPress/home.php-rw-r--r--  2.3 unx     1411 tx defN 14-Jan-08 09:05 StudioPress/functions.phpView the content of tar or tgz file $ less update_inv.tardrwxr-xr-x jacques/jacques   0 2008-01-03 20:48:50 update_inv/drwxr-xr-x jacques/jacques   0 2008-03-22 13:52:07 update_inv/log/-rw-rw-r-- jacques/jacques   0 2008-03-22 13:52:07 update_inv/log/update_inv.logdrwxr-xr-x jacques/jacques   0 2008-03-22 13:52:33 update_inv/html/-rw-rw-r-- jacques/jacques 941 2008-03-26 19:24:51 update_inv/html/gumby.htmldrwxr-xr-x jacques/jacques   0 2008-03-22 13:52:07 update_inv/tmp/-rwxrwxr-x jacques/jacques  19059 2008-03-26 19:00:43 update_inv/update_inventory.pyupdate_inv.tar (END)","categories": ["Scripting"],
        "tags": ["less"],
        "url": "/index.php/2009/04/18/doing-more-with-less/"
      },{
        "title": "Adding and removing IP aliases",
        "excerpt":"You need to add an IP address on interface eth0 ? Use the following command to activate it. ifconfig eth0:1 192.168.1.177 netmask 255.255.255.0Now you want to delete it ? No problem, use the following command ; ifconfig eth0:1 del 192.168.1.177You can also create a file /etc/sysconfig/network-scripts/ifcfg-eth0:1 to have the IP automatically come up upon reboot. # cat /etc/sysconfig/network-scripts/ifcfg-eth0:1TYPE=Ethernet# Device NameDEVICE=eth0:1# Boot Protocol none,bootp,dhcpBOOTPROTO=none# IP AddressIPADDR=192.168.1.177# NetmaskNETMASK=255.255.255.0# Normal user cannot activate/deactivate itUSERCTL=no# IPv6 ActvatedIPV6INIT=no# Use the parent interfaceONPARENT=yes# yes = Modify /etc/resolv.conf if DNS directive is set#       If using DCHP, then yes is the default# no  = Do not modify /etc/resolv.confPEERDNS=no","categories": ["Network"],
        "tags": ["ifconfig"],
        "url": "/index.php/2009/04/20/adding-and-removing-ip-aliases/"
      },{
        "title": "Resetting file permission with rpm",
        "excerpt":"Did you know that you can reset file permission to what they were when you installed the package. This may become helpful if somebody made a mistake and change the permission on a number of files (This never happen right?). This is where the command ;“rpm –setperms &#8221; become handy. In our example we will change the permission on the “find” command. # Let's find out what package contains the \"/usr/bin/find\" command# rpm -qf /usr/bin/findfindutils-4.2.27-5.el5# Let's see what are the actual permission of the find program (755).# ls -l /usr/bin/find-rwxr-xr-x 1 root root 151244 Jul  7  2008 /usr/bin/find# Let's change them to 777 with the chmod command# chmod 777 /usr/bin/find# Now the program \"find\" have this permission.# ls -l /usr/bin/find-rwxrwxrwx 1 root root 151244 Jul  7  2008 /usr/bin/find# Let's run our command to reset all files included in the package \"findutils\".# rpm --setperms findutils# You can see now that the permission of the 'find' are back to their initial state.# ls -l /usr/bin/find-rwxr-xr-x 1 root root 151244 Jul  7  2008 /usr/bin/findBe aware that this command only reset the permission and not the owner/group of the file, as you can see from the example below. # ls -l /usr/bin/find-rwxr-xr-x 1 root root 151244 Jul  7  2008 /usr/bin/find# chmod 777 /usr/bin/find# chown jacques.jacques /usr/bin/find# ls -l /usr/bin/find-rwxrwxrwx 1 jacques jacques 151244 Jul  7  2008 /usr/bin/find# rpm --setperms findutils# ls -l /usr/bin/find-rwxr-xr-x 1 jacques jacques 151244 Jul  7  2008 /usr/bin/find","categories": ["Admin"],
        "tags": ["rpm"],
        "url": "/index.php/2009/04/26/resetting-file-permission-with-rpm/"
      },{
        "title": "Search and replace multiple files",
        "excerpt":"In the example below we are replacing every occurrence of mama with papa in all .html files in current path using Perl. perl -pi -e \"s/mama/papa/g;\" *.htmlWe do the same thing here but make a copy of original file for backup. perl -pi -e.bak \"s/mama/papa/g;\" *.html","categories": ["Tips &amp; Tricks"],
        "tags": ["oneliner","perl"],
        "url": "/index.php/2009/05/01/search-replace-multiple-files/"
      },{
        "title": "What script is run when a package is install ?",
        "excerpt":"Today, we will look at what script is run when you install a rpm. In our example we will look at the script that is run when we perform a kernel installation.  First, let’s look what kernel version is installed on our system, with the this command : # rpm -qa | grep -i kernelkernel-2.6.18-92.1.22.el5kernel-2.6.18-92.1.18.el5kernel-2.6.18-128.1.6.el5kernel-headers-2.6.18-128.1.6.el5#Let’s view the script that is run when the kernel 2.6.18-128.1.6 is install ; # rpm -q --scripts kernel-2.6.18-128.1.6.el5postinstall scriptlet (using /bin/sh):if [ `uname -i` == \"x86_64\" -o `uname -i` == \"i386\" ]; then   if [ -f /etc/sysconfig/kernel ]; then      /bin/sed -i -e 's/^DEFAULTKERNEL=kernel-smp$/DEFAULTKERNEL=kernel/' /etc/sysconfig/kernel || exit $?   fifi/sbin/new-kernel-pkg --package kernel --mkinitrd --depmod --install 2.6.18-128.1.6.el5 || exit $?if [ -x /sbin/weak-modules ]   then   /sbin/weak-modules --add-kernel 2.6.18-128.1.6.el5 || exit $?fipreuninstall scriptlet (using /bin/sh):/sbin/new-kernel-pkg --rminitrd --rmmoddep --remove 2.6.18-128.1.6.el5 || exit $?if [ -x /sbin/weak-modules ]   then   /sbin/weak-modules --remove-kernel 2.6.18-128.1.6.el5 || exit $?fi#","categories": ["Admin"],
        "tags": ["rpm"],
        "url": "/index.php/2009/05/02/what-script-is-run-when-a-rpm-is-installed/"
      },{
        "title": "yum tips and tricks",
        "excerpt":"The “yum” is a powerful and useful command. We will present here some options of this command. Hopefully, you will find these tips helpful and that you learn something. Applying only security update To be able to apply only security update on your server, we first need to install a plugin for this purpose. You can install it with this command: yum install yum-securityAfter that, we can use this plugin to update your computer to the latest security fixes : yum update --securityApplying all update except the kernel update On some system, you may want to apply all update, except the one concerning the kernel.  To put this exception , add the following line to the file /etc/yum.conf ; echo 'exclude=kernel*' &gt;&gt; /etc/yum.conf Applying all update except the kernel update In order to enable the automatic update system run following commands: chkconfig --add yum-autoupdateservice yum-autoupdate startIn order to disable the system run: service yum-autoupdate stopchkconfig --del yum-autoupdate","categories": ["sysadmin"],
        "tags": ["yum"],
        "url": "/index.php/yumtricks/"
      },{
        "title": "pssh &#8211; Running command in parallel on multiple servers",
        "excerpt":"When the number of server you are administrating is getting higher, you need to find a way to get the job done easier. This is when “pssh” come in handy. In this article, I will demonstrate by example, the utilization of the “pssh” tools. I will on purpose, not cover the “prsync” and the “pnuke” command, in an effort to keep this article interesting and not to lenghtly. To begin with, we need to automate your ssh login session to your servers from one management server. This is require before using “pssh” to it full extend. If you do not know how to automate ssh login there is an excellent article available at “The Geek Stuff” site, that explain how to do it. First, let’s install the package # rpm -ivh pssh-1.2.2-1.i386.rpmPreparing...                ########################################### [100%]   1:pssh                   ########################################### [100%]#After installing the package, there are several parallel commands that are available to us. We have the ‘pssh’ that allow us to run the same command on multiple servers, the “pscp” to copy file(s) to multiple servers and finally “pslurp” used to get directories or files from multiples host and copy them to the local server. Normally, when the command included in the “pssh” package are run, the output from the remote hosts is not shown to us. The -P option, displays the output from both remote hosts as well as the exit status. The -h option specify the file containing the name of your servers that you want the command to be executed. In our example, this file only contain the name of two servers, so that the output is shortened. On each line, we have the name of the server, follow by ‘:’ , the ssh port used and finally the name of the user you wish to use when connecting to the servers. # cat /sysadmin/cfg/dns_servers.txtdns_server2.home.ca:22 rootdns_server1.home.ca:22 root# pssh -h /sysadmin/cfg/dns_servers.txt \"date\"    (Output is hidden)dns_server2.home.ca: Success on dns_server2.home.ca:22dns_server1.home.ca: Success on dns_server1.home.ca:22# pssh -h /sysadmin/cfg/dns_servers.txt -P \"date\"  (Output is displayed)dns_server2.home.ca: Wed May  6 16:28:57 EDT 2009dns_server2.home.ca: Success on dns_server2.home.ca:22dns_server1.home.ca: Wed May  6 16:28:57 EDT 2009dns_server1.home.ca: Success on dns_server1.home.ca:22If you do not want to specify the file containing your servers list, there is an environment variable named ‘PSSH_HOSTS‘ that you can declare and ‘pssh’ will use it by default. You will notice that since the command is issued in parallel, the output does not necessary comes back in the same order that you have specify in the host file. This is normal, some servers may be more occupied than other and may take more time to run the command you specified. We can use the -o option, the specify directory path used to save the output from each remote host. Each remote host output is output to a seperate file named  with the remote machine’s host name. The -t option can be use to specify the maximum time a command have to execute on the remote server. It defaults to 60 seconds. # pssh -P -o /tmp/pssh \"date\"dns_server2.home.ca: Tue May 12 10:12:30 EDT 2009dns_server2.home.ca: dns_server2.home.ca: Success on dns_server2.home.ca:22dns_server1.home.ca: Tue May 12 10:12:30 EDT 2009dns_server1.home.ca: dns_server1.home.ca: Success on dns_server1.home.ca:22# ls -l /tmp/psshtotal 8-rw-r--r-- 1 root root 29 May 12 10:07 dns_server1.home.ca-rw-r--r-- 1 root root 29 May 12 10:07 dns_server2.home.ca# cat /tmp/pssh/dns_server1.home.caTue May 12 10:12:30 EDT 2009# cat /tmp/pssh/dns_server2.home.caTue May 12 10:12:30 EDT 2009#In the next example, we will show an example using the “pscp” command to copy a directory and all its sub directories to servers listed in our /sysadmin/cfg/dns_servers.txtfile.  In /tmp, I created a directory named “coco”  with two files in it and a sub-directory  named “coco1” with one file in it.  We then issue the “pscp” command and to verify that it worked, we list the “coco” directory on one of the server were we copied the directory content. # cd /tmp(/tmp)# mkdir coco(/tmp)# date &gt; coco/date1.txt(/tmp)# date &gt; coco/date2.txt(/tmp)# mkdir  coco/coco1(/tmp)# date &gt; coco/coco1/date3.txt(/tmp)# ls -lR cocococo:total 12drwxr-xr-x 2 root root 4096 May 12 10:34 coco1-rw-r--r-- 1 root root   29 May 12 10:33 date1.txt-rw-r--r-- 1 root root   29 May 12 10:33 date2.txtcoco/coco1:total 4-rw-r--r-- 1 root root 29 May 12 10:34 date3.txt(/tmp)#(/tmp)# pscp -r coco /tmpSuccess on dns_server2.home.ca:22Success on dns_server1.home.ca:22(/tmp)# ssh dns_server1.home.ca \"ls -lR /tmp/coco\"/tmp/coco:total 12drwxr-xr-x    2 root     root         4096 May 12 10:51 coco1-rw-r--r--    1 root     root           29 May 12 10:52 date1.txt-rw-r--r--    1 root     root           29 May 12 10:52 date2.txt/tmp/coco/coco1:total 4-rw-r--r--    1 root     root           29 May 12 10:52 date3.txt(/tmp)#The “pslurp” command grabs a file or directory of all the remote servers and copies it to the local machine. The example below grabs the “coco” directory from both dns_server1.home.ca and dns_server2.home.ca and copy them into “/tmp/outdir” on our local server. The -r option is shorthand for --recursive.  For each remote host, a new directory is created with the name of the host, and inside that directory a copy of copy is made using the local directory name supplied as the last argument to pslurp. (/tmp)# mkdir /tmp/outdir(/tmp)# pslurp -L /tmp/outdir -r /tmp/coco cocoSuccess on dns_server1.home.ca:22Success on dns_server2.home.ca:22(/tmp)# (/tmp)# cd /tmp/outdir(/tmp/outdir)# ls -lRtotal 8drwxr-xr-x 3 root root 4096 May 12 11:08 dns_server1.home.cadrwxr-xr-x 3 root root 4096 May 12 11:08 dns_server2.home.ca./dns_server1.home.ca:total 4drwxr-xr-x 3 root root 4096 May 12 11:08 coco./dns_server1.home.ca/coco:total 12drwxr-xr-x 2 root root 4096 May 12 11:08 coco1-rw-r--r-- 1 root root   29 May 12 11:08 date1.txt-rw-r--r-- 1 root root   29 May 12 11:08 date2.txt./dns_server1.home.ca/coco/coco1:total 4-rw-r--r-- 1 root root 29 May 12 11:08 date3.txt./dns_server2.home.ca:total 4drwxr-xr-x 3 root root 4096 May 12 11:08 coco./dns_server2.home.ca/coco:total 12drwxr-xr-x 2 root root 4096 May 12 11:08 coco1-rw-r--r-- 1 root root   29 May 12 11:08 date1.txt-rw-r--r-- 1 root root   29 May 12 11:08 date2.txt./dns_server2.home.ca/coco/coco1:total 4-rw-r--r-- 1 root root 29 May 12 11:08 date3.txt(/tmp/outdir)#I sincerely hope that with these examples, will give you a good overview and a good feel of power of  the pssh package. So have fun ! There is a problem with some requirement of the latest version if you are running with Redhat/Centos 4 5 or Fedora.  I suggest using the version 1.2.2-1 instead of the latest 1.4.3.1 version Download the version 1.2.2.1 (pssh-1.2.2-1.i386.rpm)  or the latest version (pssh-1.4.3-1.noarch.rpm)Visit the pssh website for more information. ","categories": ["Tools"],
        "tags": ["pssh","ssh"],
        "url": "/index.php/2009/05/12/pssh/"
      },{
        "title": "Exploring vmstat command",
        "excerpt":"As a system administrator, I have a variety of performance tools that I use to identify problem related to system performance. In this article, I have tried to demonstrate the usage of the “vmstat” command and also explain the meaning of each column that it produce. I inserted some tips regarding the interpretation of theses columns, I wanted to make this article a reference for me and hopefully for you too.  So the next time you use the command ” vmstat”,  you can come back at this article and analyze the output of your problematic system. First let’s look at different way we can invoke the “vmstat” command.  To monitor the virtual memory activity on your system,  it is preferable to use “vmstat” with a delay. A delay is a number of seconds between updates. If you don’t supply a delay “vmstat” reports the average values since the last reboot and quit.  With the delay, you can also specify a count, which indicate how many updates you want to see before “vmstat” quits. If you don’t specify a count, the count defaults is infinity and you will have to press CTRL-C to stop “vmstat”.  In our example, we asked  “vmstat” to run with four updates with a delay of five seconds between update.   vmstat figure 1         procs section The procs section indicate the number of running processes (r) and blocked (b) processes at the time of the reporting. The scheduler determines when processes are run. Each process is assigned a priority and a slot in the process table. Processes must be present in memory before they are run. If a process is scheduled to run but a memory page for part of that process is not in real memory, that process is blocked and placed in the run queue. Processes ready to run are placed in the run queue, &#8220;vmstat&#8221; reports on processes that are in the run queue and those that are blocked.                 (r) &#8211; Represent the number of runnable processes in the run queue. The value should be a sigle-digit on a healthy server, but can occasionally get higher. From my experience when it reach number greater than 20 on some big and busy system you should have a look on the system and see what process is taking most of the cpu (use the top command).              (b) &#8211; This value represent the number of processes scheduled to be executed but blocked, waiting for the virtual memory to page the part of that process which is on disk into real memory. This number should also be a single digit on a healthy system.                         memory section The memory section report the amount of memory swapped out (swpd), free memory (free), buffer cache for i/o data structure (buff) and cache memory for file read from disk (cache) in kilobytes.           Swapping, strictly speaking, refers to writing portions of memory (4K page) to disk.  A page fault occurs when the virtual memory manager attempts to access a memory page that is not in memory.  Real memory that is not used is place in the free list. The virtual memory manager is responsible for maintaining the free list.                 (swpd) &#8211; Represent the amount of virtual memory used (Kb). In our example we are using 1.48Gb (1176140/1024=1148Mb) of our swap space.              (free) &#8211;  This represent the amount of real memory that is not used at the moment. In our example,  we have 943Mb (966,124/1024=943Mb) of unused memory.              (buff) &#8211; The “buffers” entry indicate how much of the memory in use is currently being used for disk buffering. In our example, we have 76MB (78444/1024=76Mb) of memory allocated for disks buffering.              (cache) &#8211;  When extra physical memory is not in use, the kernel attempts to put it to work as a disk buffer cache. The disk buffer stores recently accessed disk data in memory; if the same data is needed again it can be quickly retrieved from the cache, improving performance. The buffer grows and shrinks dynamically to use the memory available, although priority is given to using the memory for paging. Thus, all the memory you have is put to good use.  In our example above we have 2.1Gb (2211108/1024=2159Mb) used for disks caching.              swap section The &#8220;swap&#8221; section indicate the amount of memory swapped in (si) from disk and swapped out (so) to disk, in kilobytes per second.  All processes use memory, but all processes doesn&#8217;t need all of it memory at all time,  Linux take advantage of this fact. The kernel frees up some physical memory by writing some or all of a process memory to disk until it is needed again. When pages are written to disk, the event is called a page-out, when pages returned to physical memory, this event is called a page-in.  Using swap space is not inherently bad, but intense paging activity can become problematic. When the kernel reach a point where it&#8217;s actually spending more time managing activity than running the applications, you will see a system performance degradation, this is when adding more memory to the system have to be considered.                 (si) &#8211;  Amount of memory swapped in from disk (/s).  Swap-in/Page-in are common, normal and may not cause concern. Example, when an application first starts up, its executable image and data are page-in, this a normal process.              (so) &#8211; Amount of memory swapped in from disk (/s).  Swapping-out/Paging-out however, could be a sign of trouble. When the kernel detects that memory is running low, it attempts to free up memory by paging out. This may happens for a short period of time, but if see that it is becoming constants, then this may indicate that you are short on memory on the system. This is also causing a performance decrease on the server, because the system is spending a lot of it time writing (page-out) and reading (page-in) memory pages to disk.  The time that the kernel is doing the disk I/O  needed to perform page-out/page-in is not given to the user process. This is an important column to look at.              io section Return the number of blocks read in (bi) from the devices and blocks written out (bo) to the devices in kilobytes per second. Pay particular attention to these two fields when running i/o intensive applications. The statistics shown here, are mostly disk I/O, but it can be any block devices on the systems (Optical disk, Tapes).                 (bi) &#8211;  Blocks received from a block device (blocks/s).              (bo) &#8211;  Blocks sent to a block device (blocks/s).              system section Report the number of interrupts (in) and context switches (cs) per second.                 (in) &#8211; The number of interrupts per second, including the clock.              (cs) &#8211; The number of context switches per second. Cpu time is given to each process in time slices. When a process has used up its time slice, it must relinquish the cpu to another process. The cpu must save the working environment for the next process to be executed. This is known as context switch.              cpu section Report the percentage of total CPU time in terms of user (us), system (sy), true idleness (id), and waiting for i/o completion (wa). Perhaps the most common metric is CPU utilization. If “wa” is large, examine the i/o subsystem – you may conclude, for example, that more i/o controller and disks are needed to reduce the i/o wait time, you may want to split the I/O on multiple disks. If swapping is occurring a lot, then you may want to add memory to reduce that i/o wait percentage. If the idle time (id) is consistently 0 and the system time (sy) is double the user time (us), the system is facing a shortage of cpu resource.                 (us) &#8211; Percent of time the cpu is operating in user mode. When is user mode, a process executes in its application code and does not require kernel resources.              (sy) &#8211; Percent of the time the cpu is operating in kernel mode.. When is system mode, the process is making calls for accessing the kernel.              (id) &#8211; Percent of time the cpu is idle not processes available for execution and no pending i/o.              (wa) &#8211; Percent of time the cpu is idle with no processes available for execution but with pending i/o requests.              Conclusion           It isn&#8217;t necessarily bad for system to use some of its swap page, but if you realize that your system performance is decreasing, running low on memory and that there is a lot of paging going on, adding more memory can be a solution. With the column &#8220;si&#8221; and &#8220;so&#8221; you can even have an idea on how much memory is needed to reduce or eliminate the paging.           I hope that you appreciated this article and that we will come back to the site.  I have many more interresting article in mind, so subscribe to my RSS feed and hope to see you come back soon :-).    ","categories": ["Performance"],
        "tags": ["Performance","vmstat"],
        "url": "/index.php/2009/05/22/vmstat/"
      },{
        "title": "Add date &#038; time to your bash history",
        "excerpt":"We all know the “history” command that display the list of commands you previously entered.  But have you ever wish to know when these commands were entered ?  This useful tip, will require only  a few seconds to put in place and will now add the date and time in your history file.  &lt;figcaption class=\"wp-caption-text\"&gt;Output of history command before the change to /etc/bashrc&lt;/figcaption&gt;&lt;/figure&gt; Let’s modify our system global “bashrc” file in /etc, so that the change affect every users using the system.  &lt;figcaption class=\"wp-caption-text\"&gt;Defining HISTTIMEFORMAT variable in /etc/bashrc&lt;/figcaption&gt;&lt;/figure&gt; Now, we need to log out and log back in the system to make our change effective.  &lt;figcaption class=\"wp-caption-text\"&gt;History command now include the date &amp; time for each command&lt;/figcaption&gt;&lt;/figure&gt; You will now notice,  the each command is preceded with a date and a time. Be aware, that all commands entered before our change to /etc/bashrc have been assigned the date and time we first login after doing the change. So from now on every command we enter, will be recorded in .bash_history file with the date and time it was entered. See you soon ! ","categories": ["Tips &amp; Tricks"],
        "tags": ["history"],
        "url": "/index.php/2009/05/24/add-time-to-bash-history/"
      },{
        "title": "Automated DVD Backup",
        "excerpt":"Today I would like to share with you, a little script that I use every week. I have four rewritable DVD that I use in rotation to backup important directories of my server at home. All I have to do is to leave one of these DVD+RW in the dvd drive and a backup of my important directories will be taken at regular interval. I have schedule a cron job that run tree times a week, to backup to DVD directories that are important to me. This is by no way a replacement of a full system backup like Mondo rescue, Storix or Acronis, but they represent to me the directories that are subject to change more often. I must specify that the command used in this script require using a DVD+RW to work. The script need some tools included in the ‘dvd+rw-tools” package, just be sure you install it before running the script Fedora or RHEL 5# yum install 'dvd+rw-tools'RedHat Enterprise 3 or 4# up2date 'dvd+rw-tools'Now, let’s schedule our script to run every Monday, Wednesday and Friday at 3am. I have chosen to place the script in a directory (filesystem) name /linternux in the sub-directory ‘bin’, but you can place it where ever you like. For those more familiar with Linux, you can use the çrontab -e’ command and add the two lines presented here at the end of file. Below, I am presenting an alternative method to add the lines in the ‘crontab’ file of user ‘root’. When you add lines to the ‘root’ crontab file in this matter, you must inform the ‘cron’ daemon that it need to reload its configuration file, so it is aware of the changes we made. Both of these method, will schedule our script at the chosen time. # echo '# Backup important directories to DVD' &gt;&gt; /var/spool/cron/root# echo '0 3 * * 1,3,5 /linternux/bin/dvd_backup.sh &gt;/dev/null 2&gt;&amp;1' &gt;&gt; /var/spool/cron/root# service crond reloadReloading cron daemon configuration:                       [  OK  ]#Once downloaded the dvd_backup.sh script, need to modify it to fit your need.   ‘BASEDIR‘ variable need to be change to represent the location of the ‘log’ directory. This can easily be change to ‘BASEDIR=”/var”‘. This is where the log file of the script is created. This is the file that will be email to you.  “DVD_DEV” indicate the device representing your DVD writer. Usually, it should be set to ‘/dev/cdrom’, ‘dev/hdd’ or ‘/dev/dvd’.  “SYSADMIN” variable represent the email address you would like the log file to be sent.  “BACKDIR” is the variable where you specify each and every directories you wish to include on the DVD backup. The syntax may seems redundant, but this is the way we need to specify them. We need to specify the name of the directory twice, separated by and equal sign.&lt;figcaption class=\"wp-caption-text\"&gt;Part that is subject to change &lt;/figcaption&gt;&lt;/figure&gt; The rest of the script does not need to be changed, but is presented here for information purpose only. The script require a DVD+RW, the DVD-RW will not work with this script. The script use the “dvd+rw-format” and the “growisofs” command to format and write to the DVD. If an error occurs, during the format or the backup, an email is sent to the system administrator and the process is stopped. &lt;figcaption class=\"wp-caption-text\"&gt;Part of the script that doesn’t need to be change&lt;/figcaption&gt;&lt;/figure&gt; If you want to know more about using dvd+rw , see the “Burning DVD+RW in Linux” web page. The script dvd_backup.sh is free to use, have fun and see you soon ! ","categories": ["Scripting"],
        "tags": ["dvd","script","Tools"],
        "url": "/index.php/2009/05/31/automated-dvd-backup/"
      },{
        "title": "Creating a PDF printer",
        "excerpt":"When I decided to move to Linux on my desktop, I tried to reproduce the same functionality that I was having under windows. One of the program I was using under Windows was PDF-Factory , it actually create a PDF printer. When ever I wanted to produced a PDF, I only had to print to that PDF printer. After some research, I found “cups-pdf”, this utility allow me to have the same functionality under Linux. In this article, I installed the product under RHEL5, but installing it on other version of Linux is very similar. Once downloaded, installing cups-pdf is quite simple. Just type following command : # rpm -ivh cups-pdf-2.4.6-1.el5.i386.rpmwarning: cups-pdf-2.4.6-1.el5.i386.rpm: Header V3 DSA signature: NOKEY, key ID 217521f6Preparing...                ########################################### [100%]1:cups-pdf               ########################################### [100%]#Next, we need to customize “cups-pdf” to our needs. To do that, we edit the configuration “/etc/cups/cups-pdf.conf”. By default every PDF you print will end up on your desktop. I choose to create a directory called “pdf” in my home directory and change cups-pdf configuration accordingly. # vi /etc/cups/cups-pdf.conf#Out ${HOME}/DesktopOut ${HOME}/pdfBy default file are created with a umask of 0077, so only I can read it. I change it to 0022 so that everybody can read it. #UserUMask 0077UserUMask 0002These are the only fields, I usually change before start using “cups-pdf”. If you have any problem using “cups-pdf”, remove the comment on the “Log” and “Logtype” line to activate the logging. The configuration file is well documented, take a look at it and customize cups-pdf to it full extend. You can download the version 2.4.6 for RHEL4 and RHEL5 or 2.5.0 for Fedora 10 and Fedora 11. To download packages for other version of linux visit the download page of cups-pdf home page. Happy printing ! ","categories": ["Printing"],
        "tags": ["Printing"],
        "url": "/index.php/2009/06/06/create-pdf-printer/"
      },{
        "title": "Adding SAN disk without rebooting",
        "excerpt":"The production system is running, the database filesystem is almost full. We need more disk space on the server. The server is attached to the San so we can add disk without bringing down the server. In this article, we will demonstrate what is needed to make the new San disk available to the server without disturbing the running application. Although that theses commands have been tested and used on production environment,  I suggest that you build your confidence first, by trying them on a development system. On Red Hat / Centos 5 In our example, we have presently one disk accessible via one fiber HBA on our server. We can use to “lsscsi” command to list our scsi device. If you do not have the command ‘lsscsi’ command installed, you can install it by issuing the following command “yum install lsscsi”. Our server can see one disk at the moment ; #  lsscsi[0:0:0:0]    disk    HITACHI  OPEN-V           5009   /dev/sdaLet rescan our SCSI bus. Since we have only one fiber card in our server, we will scan only the first HBA (host0). If you have two fiber card, you may need to issue the “partprobe” command for the disk to be seen on the second interface. # echo \"1\" &gt; /sys/class/fc_host/host0/issue_lipWe now see the new SAN disk that was newly allocated to the system. # lsscsi[0:0:0:0]    disk    HITACHI  OPEN-V           5009   /dev/sda[0:0:0:1]    disk    HITACHI  OPEN-V           5009   /dev/sdbFor other kind of SCSI attached storage, we should rescan the bus with this command : # echo \"- - -\" &gt; /sys/class/scsi_host/host0/scan   (First hba)# echo \"- - -\" &gt; /sys/class/scsi_host/host1/scan   (Second hba, if present)On Red Hat / Centos 3 and 4 The current situation is that we have one disk (lun 2), that is seen by the two fiber cards on our server. # cd /proc/scsi/sg# cat device_hdr deviceshost    chan    id      lun     type    opens   qdepth  busy    online0       0       0       2       0       1       64      0       11       0       0       2       0       1       64      0       1#These commands trigger the driver to initiate lun discovery process # echo \"scsi-qlascan\" &gt; /proc/scsi/qla2300/0    # For Qlogic Fiber card 0# echo \"scsi-qlascan\" &gt; /proc/scsi/qla2300/1    # For Qlogic Fiber card 1Lets force the scsi mid layer to do its own scan and build the device table entry for the new device:We are adding the LUN 04 # echo \"scsi add-single-device 00 00 00 04\" &gt; /proc/scsi/scsi# echo \"scsi add-single-device 01 00 00 04\" &gt; /proc/scsi/scsiLet see if the new LUN was Assigned (Visible) by Linux # cd /proc/scsi/sg# cat device_hdr deviceshost    chan    id      lun     type    opens   qdepth  busy    online0       0       0       2       0       1       64      0       10       0       0       4       0       0       64      0       11       0       0       2       0       1       64      0       11       0       0       4       0       0       64      0       1#In the command “echo “scsi add-single-device HH CC TT LL ” &gt;/proc/scsi/scsi” The path name should have the following format HHCCTTLL :HH=Adapter number (HBA#)    CC=Channel ID    TT=SCSI ID   LL=LUN ID OF DEVICE ** ****&lt;figcaption id=\"caption-attachment-512\" class=\"wp-caption-text\"&gt;Qlogic Command Line Interface&lt;/figcaption&gt;&lt;/figure&gt; Qlogic have a command line tool called “scli” that really simplify the operation of adding SAN disk on Redhat/Centos/Fedora. It can also be used to obtain Fiber card information and setting.  Download it for Redhat 32 Bits or RedHat 64Bits.Hope to see you soon ! ","categories": ["Storage"],
        "tags": ["disk","san"],
        "url": "/index.php/2009/06/23/adding-san-disk/"
      },{
        "title": "Viewing and changing netword card setting",
        "excerpt":"Checking our network card current setting There are two commands that we can use to check our current network card setting. The first command is “mii-tool”, it  has been around almost since the beginning of Linux and will be depreciated in the future version of Linux. If we don’t specify any parameter to the “mii-tool” command, we will get one line of information per network card. It will display the current speed of the network card, the duplex mode it’s using and if you have a link or not.  If we don’t have a link up (no link) and it is suppose to be, I suggest to verify that your cable is connected to the server and that the port on the network switch is activate.  If this is the case, you may want to try another network cable and see if the link come up. # mii-tooleth0: 100 Mbit, full duplex, link oketh1: 100 Mbit, full duplex, no link#If we add the verbose parameter (-v), we will get some additional information about each network card. # mii-tool -veth0: 100 Mbit, full duplex, link ok product info: vendor 00:aa:00, model 50 rev 0 basic mode:   100 Mbit, full duplex basic status: link ok capabilities: 100baseTx-FD 100baseTx-HD 10baseT-FD 10baseT-HD advertising:  100baseTx-FD 100baseTx-HD 10baseT-FD 10baseT-HD flow-controleth1: 100 Mbit, full duplex, no link product info: vendor 00:10:18, model 23 rev 6 basic mode:   100 Mbit, full duplex basic status: no link capabilities: 100baseTx-FD 100baseTx-HD 10baseT-FD 10baseT-HD advertising:  100baseTx-FD 100baseTx-HD 10baseT-FD 10baseT-HD flow-control#I would suggest using the “ethtool” command instead of the depreciated “mii-tool”. The “mii-tool” may not work with some of the newer network card and  may be excluded from future version of RedHat/Centos/Fedora. With the “ethtool” command,  we need to specify the name of the interface that we want to see the current state. In all of our example, we will use the interface “eth0”. # ethtool eth0Settings for eth0: Supported ports: [ TP MII ] Supported link modes:   10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full Supports auto-negotiation: Yes Advertised link modes:  10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full Advertised auto-negotiation: No Speed: 100Mb/s Duplex: Full Port: MII PHYAD: 1 Transceiver: internal Auto-negotiation: off Supports Wake-on: g Wake-on: g Current message level: 0x00000007 (7) Link detected: yes#Display driver information If we want to see some driver information about our network card, use the “-i” parameter next to the “ethtool” command. In this example, we can see that the driver we are using for this card is “e100″.  Effectively, if we use the “lsmod” (list module) we found out the the “e100″ is actually loaded. # ethtool -i eth0driver: e100version: 3.5.10-k2-NAPIfirmware-version: N/Abus-info: 0000:05:08.0## lsmod | grep e100e100                   36809  0mii                     9409  2 3c59x,e100#Display statistics information With the “-S” parameter,  we can display statistics about our network card.  This information could be valuable if you are experimenting some problem with that interface. It will confirm your doubt or it will indicate that you should check somewhere else to identify the problem.  # ethtool -S eth0NIC statistics: rx_packets: 12684 tx_packets: 7638 rx_bytes: 14990414 tx_bytes: 621100 rx_errors: 8 tx_errors: 0 rx_dropped: 0 tx_dropped: 0 multicast: 0 collisions: 0 rx_length_errors: 7 rx_over_errors: 0 rx_crc_errors: 1 rx_frame_errors: 0 rx_fifo_errors: 0 rx_missed_errors: 0 tx_aborted_errors: 0 tx_carrier_errors: 0 tx_fifo_errors: 0 tx_heartbeat_errors: 0 tx_window_errors: 0 tx_deferred: 0 tx_single_collisions: 0 tx_multi_collisions: 0 tx_flow_control_pause: 0 rx_flow_control_pause: 0 rx_flow_control_unsupported: 0 tx_tco_packets: 0 rx_tco_packets: 0#Network adapter self test You can also run a self test on the network card.  Beside the interface name you can specify two types of tests:  offline (default) means to perform full set of tests possibly causing normal operation interruption during the tests, online means to perform limited set of tests do not interrupting normal adapter operation.  # ethtool -t eth0 onlineThe test result is PASSThe test extra info:Link test     (on/offline)       0Eeprom test   (on/offline)       0Self test        (offline)       0Mac loopback     (offline)       0Phy loopback     (offline)       0# ethtool -t eth0 offlineThe test result is PASSThe test extra info:Link test     (on/offline)       0Eeprom test   (on/offline)       0Self test        (offline)       0Mac loopback     (offline)       0Phy loopback     (offline)       0#Changing network card setting interactively Below we change the network card setting from the command line. I strongly recommend doing these changes on the console,  if not you may loose your network connection with the your server.In this example we will set the interface “eth0” speed to 10Mb/s and the duplex mode to half. After doing the change we use again the “ethtool” command to verify that our change have took place. # ethtool -s eth0 speed 10 duplex half# ethtool eth0Settings for eth0:Supported ports: [ TP MII ]Supported link modes:   10baseT/Half 10baseT/Full100baseT/Half 100baseT/FullSupports auto-negotiation: YesAdvertised link modes:  10baseT/Half 10baseT/Full100baseT/Half 100baseT/FullAdvertised auto-negotiation: NoSpeed: 10Mb/sDuplex: HalfPort: MIIPHYAD: 1Transceiver: internalAuto-negotiation: offSupports Wake-on: gWake-on: gCurrent message level: 0x00000007 (7)Link detected: yes#We will now set back our network card speed back to 100Mb/s, the duplex mode to “Full” and activate the speed autonegociate. Again we verify that our change have took place by issuing the “ethtool -s eth0” command. # ethtool -s eth0 speed 100 duplex full autoneg on# ethtool eth0Settings for eth0: Supported ports: [ TP MII ] Supported link modes:   10baseT/Half 10baseT/Full 100baseT/Half 100baseT/Full Supports auto-negotiation: Yes Advertised link modes:  100baseT/Full Advertised auto-negotiation: Yes Speed: 100Mb/s Duplex: Full Port: MII PHYAD: 1 Transceiver: internal Auto-negotiation: on Supports Wake-on: g Wake-on: g Current message level: 0x00000007 (7) Link detected: yes#Setting speed and duplex at boot time If we want to set the network card setting permanently, so they are preserve even after rebooting the the server, we need to open the file: # vi /etc/sysconfig/network-scripts/ifcfg-eth0Append following line: ETHTOOL_OPTS=\"speed 100 duplex full autoneg off\"If you want that change to become effective now, you will need to restart the network service. Be aware that people and/or processes running on the system may be affected by this restart. # service network restartHoping this article will be prove to be useful and see you soon. ","categories": ["Network"],
        "tags": ["ethtool","Network"],
        "url": "/index.php/2009/07/05/view-change-nic-setting/"
      },{
        "title": "Setting up your own NTP server",
        "excerpt":"As a system administrator, we must ensure that time synchronization is working at all time. Time synchronization have been proven to be helpful when we try to trace a chain of events that occurs on multiple servers or when trying to synchronize time sensitive-transactions. In this article, we will setup one NTP (Network Time Protocol) server running on RedHat/Centos 5, but it could be applied to the major Linux distribution.  As always, I have tried to make the article to be used a reference source, so that we can come back when ever you will play with the NTP tools. The configuration have been done on my Linux server at home (gumby – 192.168.1.101).  We will setup a NTP   that will synchronize with NTP servers on the internet and it will answer NTP query on my internal network (192.168.1.0/24). This will allow desktop or laptop to synchronize with this NTP server. Brief history of NTP The NTP protocol was born on the Unix operating system around the 1980’s and have been initiated by Dave L. Mills. Currently there are two versions of NTP that can be used intermixed, the version 3 is very stable and it run on a number of operating systems. The version 4 have some enhancements and better support for the latest operating systems. There is also a simplified version of NTP called SNTP (Simple Network Time Protocol RFC2030), but it provides a reduced precision due to a simpler algorithms. Some earlier version of NTP included some programs starting with xntp (like xntpd), with version 4 the naming convention were changed and now all the ntp programs included with package, start with ntp. For more information you can consult the NTP home page. Functionality overview NTP use a hierarchical time synchronization structure. The hierarchical level of the time synchronization are called stratum. At the top of this hierarchy, there is a daemon that provide the most accuracy. Atomic clock are stratum zero, it is by far the most accurate method of keeping time with a precision of less than a second lost every 100 million years.  All NTP time server devices are referred to as stratum 1 devices. This is because they are on the next level (strata) down from an atomic clock (a stratum 0 device). Devices that a NTP time server synchronises are known as stratum 2 devices and these too can distribute their time signal to other devices which become stratum 3 and so on. In large organization, they should be at least one or two NTP servers that synchronize with time server on the internet NTP servers (probably located in the DMZ).  Some NTP servers located in the corporate network, could then synchronize their time with the NTP servers located in the DMZ and be used as corporate NTP servers. This will ensure that all the clients have the same date and time.  Before continuing, I would like to state that the NTP protocol use UDP port 123. To be able to synchronize with its trusted time servers and to respond to client query the firewall configuration must allow UDP traffic to destination port 123. Setting your time zone The first we must check, is the time zone define on our system, it have to be define correctly. My server is located in Montreal and is define accordingly. root@gumby:/# cat /etc/sysconfig/clock# The ZONE parameter is only evaluated by system-config-date.# The timezone of the system is defined by the contents of /etc/localtime.ZONE=\"America/Montreal\"UTC=trueARC=falseroot@gumby:/#If your is not setup correctly, you can use the change your time zone by using the command “timeconfig” that will display an ASCII text menu or use the GUI version by typing the command “system-config-time”. These programs modify the content of the files /etc/sysconfig/clock (ascii format) and /etc/localtime (binary format). NTP Software Verify that the NTP package is installed on your server by using the “rpm -qi ntp” command. If not,  install it using the command “yum install ntp” or “up2date –nox -i ntp”  if you are using RedHat/Centos V3 or V4. root@gumby:/etc# rpm -qi ntpName        : ntp                          Relocations: (not relocatable)Version     : 4.2.2p1                           Vendor: Red Hat, Inc.Release     : 9.el5_3.2                     Build Date: Thu 14 May 2009 09:01:12 AM EDTInstall Date: Thu 02 Jul 2009 09:29:46 PM EDT      Build Host: hs20-bc1-5.build.redhat.comGroup       : System Environment/Daemons    Source RPM: ntp-4.2.2p1-9.el5_3.2.src.rpmSize        : 2540868                          License: distributableSignature   : DSA/SHA1, Fri 15 May 2009 09:53:46 AM EDT, Key ID 5326810137017186Packager    : Red Hat, Inc. &lt;http://bugzilla.redhat.com/bugzilla&gt;URL         : http://www.ntp.orgSummary     : Synchronizes system time using the Network Time Protocol (NTP).Description :The Network Time Protocol (NTP) is used to synchronize a computer'stime with another reference time source. The ntp package containsutilities and daemons that will synchronize your computer's time toCoordinated Universal Time (UTC) via the NTP protocol and NTP servers.The ntp package includes ntpdate (a program for retrieving the dateand time from remote machines via a network) and ntpd (a daemon whichcontinuously adjusts system time).Install the ntp package if you need tools for keeping your system'stime synchronized via the NTP protocol.root@gumby:#Choosing our internet NTP servers It is a good practice that our NTP server synchronize with more that one servers. There is a project called NTP Project Pool that is a big virtual cluster of NTP server spread across the world. In North-America they have more that 575 NTP servers and more than 50 in Canada. We will use the Canadian cluster to setup our NTP server. You will find the ntp servers name at the top of  the Canadian virtual cluster page.  The IP address assigned to these names always change, this spread the load within the cluster and allow us to have a good response from these NTP servers. Below is the result of two “nslookup” of “0.ca.pool.ntp.org”, you will notice that the IP returned are not the same for the two “nslookup”. These servers are normally have a stratum of 2 or 3. If you wish to use a even more accurate NTP server, I suggest visiting this page that contain a list of stratum one server on the internet and choose one or two servers located near you. root@gumby:~# nslookup 0.ca.pool.ntp.orgServer:         192.168.1.101Address:        192.168.1.101#53Non-authoritative answer:Name:   0.ca.pool.ntp.orgAddress: 66.96.30.35Name:   0.ca.pool.ntp.orgAddress: 174.142.75.135Name:   0.ca.pool.ntp.orgAddress: 206.248.189.157Name:   0.ca.pool.ntp.orgAddress: 209.139.209.82Name:   0.ca.pool.ntp.orgAddress: 216.221.88.81root@gumby:~# nslookup 0.ca.pool.ntp.orgServer:         192.168.1.101Address:        192.168.1.101#53Non-authoritative answer:Name:   0.ca.pool.ntp.orgAddress: 216.221.88.81Name:   0.ca.pool.ntp.orgAddress: 66.96.30.35Name:   0.ca.pool.ntp.orgAddress: 174.142.75.135Name:   0.ca.pool.ntp.orgAddress: 206.248.189.157Name:   0.ca.pool.ntp.orgAddress: 209.139.209.82root@gumby:~#NTP server configuration file The NTP configuration file is called ntp.conf and is located in the /etc directory. Here is the configuration file for my home network. We will be using the 4 virtual servers of the Canadian NTP pool. root@gumby:~# cat /etc/ntp.conf# Default restriction# kod           When access violation occurs send the \"Kiss Of Death\" - Drop Packet# nomodify      Deny queries which attempt to modify the state of the server.# nopeer        Deny packets which would result in mobilizing a new association.# noquery       Deny Queries.# notrap        Deny trap service -  subsystem of ntpdq control message protocol#               intended for use by remote event logging programs.restrict default kod nomodify notrap nopeer noquery# Use public servers from the pool.ntp.org project.# Please consider joining the pool (http://www.pool.ntp.org/join.html).server 0.ca.pool.ntp.orgserver 1.ca.pool.ntp.orgserver 2.ca.pool.ntp.orgserver 3.ca.pool.ntp.org# Permit all access over the loopback interface.restrict 127.0.0.1# Hosts on local network are less restricted (Can Query)restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap# Undisciplined Local Clock. This is a fake driver intended for backup# and when no outside source of synchronized time is available.fudge   127.127.1.0 stratum 10# Drift file.  Put this in a directory which the daemon can write to.driftfile /var/lib/ntp/drift  For security reason, we disallow access to our NTP server. This line “restrict default kod nomodify notrap nopeer noquery” prevent clients, servers or hacker to query our NTP configuration.  (See explanation of each flag see the comment included in example above).  We then specify the server names we took from the NTP project pool, for cluster of servers located in Canada “server 0.ca.pool.ntp.org … server 3.ca.pool.ntp.org“. We are using four servers names that are actually a pool of more than 50 servers located in Canada, this will ensure that we will always a quick response to our queries.  We give full access to the local host “restrict 127.0.0.1“.  With the line “restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap“, we permit query but no modification or trap request to our internal network. In the example, it is my home network (192.168.1.0/24). You need to replace the IP and netmask by the network that you wish to allow synchronization with this server.  The line “fudge 127.127.1.0 stratum 10“, in a “just in case” line. If connection with the outside world is not working (internet network problem), the NTP service will continue to work and your internal server will still be able to synchronize with your server.  The line “driftfile /var/lib/ntp/drift” is added because the NTP daemon computes the drift of the system clock compared to the reference time. The daemon could then can save the drift rate to a file to have it available at the next restart. If the daemon is maintaining the drift file, this will increase synchronization speed.Starting NTP service We want to make sure that the NTP service start at each system reboot. Type the following command to activate the service for system run level 3 and 5. root@gumby:~# chkconfig --level 35 ntpd onThe NTP Service can be stopped, started or restarted using the following command ; root@gumby:~# service ntpd stopShutting down ntpd:                                        [  OK  ]root@gumby:~# service ntpd startStarting ntpd:                                             [  OK  ]root@gumby:~# service ntpd restartShutting down ntpd:                                        [  OK  ]Starting ntpd:                                             [  OK  ]root@gumby:~#Every time we make change to the configuration file we need to do a restart of the NTP service for the changes to take effect on the running process. Initial Synchronization If your system date and time is very different from the actual time the NTP daemon may terminate. We should run the “ntpdate -u” command to force the system clock to become synchronize with our NTP cluster. If you encounter any problem with your time server, remember to check the “/var/log/messages” file for error messages. To test our NTP server configuration we will change the date and time of our server to January the 1th of 2008 at 20:05:10 and use the “ntpdate -u” command to bring it back to the actual date and time. root@gumby:~# dateFri Jul 24 10:09:53 EDT 2009root@gumby:~# date 010120052008.10Tue Jan  1 20:05:10 EST 2008root@gumby:~# dateTue Jan  1 20:05:18 EST 2008root@gumby:~# ntpdate -u  0.ca.pool.ntp.org24 Jul 10:10:19 ntpdate[1820]: step time server 132.214.200.120 offset 49208692.700394 secroot@gumby:~# ntpdate -u  0.ca.pool.ntp.org24 Jul 10:10:23 ntpdate[1821]: adjust time server 24.215.0.24 offset -0.031689 secroot@gumby:~# dateFri Jul 24 10:10:25 EDT 2009root@gumby:~#Checking our NTP server status The best way to confirm that NTP is working is to use the ntp utility. This command can be use to check the NTP service status on either the local server or on a remote server. We will use the “ntpq -p”  to print the status of our local NTP server. Looking at this result we can that the preferred time server was “woodlane.webcon”, because it have a “*” at the beginning of the line and that it is a stratum 3 server. root@gumby:~# ntpq -p remote           refid          st t when poll reach   delay   offset  jitter==============================================================================-ntp1.sscgateway 209.87.233.53    3 u  367 1024  377   21.003  -111.05  17.218*woodlane.webcon 132.246.168.164  3 u  645 1024  377   14.413   10.323   1.840+chavez.x2a.org  132.246.168.164  3 u  393 1024  377   33.589   12.340   0.097+ns1.ptpbroadban 192.135.48.21    3 u  146 1024  337   30.564   26.666   1.955root@gumby:~#The output above is showing that we have 4 references time sources, this what we expected.   The remote column indicate the name of the NTP server. We can also use the command “ntpq -pn” to display the IP instead of the name.If the first character at the beginning of each is not blank, it is used as a qualifier for the time source on the line.&lt;/p&gt;          “***” indicate that this server is the **preferred time source for our NTP daemon.      “+” indicate that this server is a consider as a high quality time source and could be used if the preferred time source is not available.      “-” indicate that this server is discarded by the clustering algorithm as an outlyer        The “refid” does not indicate an IP address but a reference to the type of clock the server is using.The “st” column indicate the stratum number of the server. All servers have a stratum of 3.  The when and the poll column are related. Each time NTP daemon query the time server identified on the same line it increment the when counter until it reach the poll number, at that point the when counter get rest to zero. The result of each cycle are used as a measure to the clock’s quality and availability.  The reach column shows the status of the availability register.This **column must be interpreted as an 8 bit shift register, displayed in octal. When the NTP service is started the value of the reach column is set to zero. Each time a query is successful a ‘1’ is shitfted to the right, so after the first query it contains a value of 1, after the second a value of 3, after the third a value of 7 (0,1,3,7,17,37,77,177,377). When it reach a **value of 377 this means that the last eight queries were successful.  The remaining entries show the latest delay, offset and jitter in milliseconds, they show timing values which are derived from the query results. The delay is calculated from the roundtrip time of the NTP query. The offset is the difference between our server and the reference time server. The jitter value should be under 100 and indicates the magnitude of jitter between several time queries.We have now a working NTP server running on our Linux server. Hope that this article have been of interest for you and hope to see you soon. ","categories": ["Network"],
        "tags": ["Network","NTP"],
        "url": "/index.php/2009/07/24/setting-up-ntp-server/"
      },{
        "title": "Yum Revisited (Part 1)",
        "excerpt":"This is a first of a series of two articles dedicated to the “yum” program. In this first article, we will mainly look at the configuration files. In the next article, we will look at some advance usage, that will help us in administrating our servers.  As always, will build our article, in a way that we can come back to it and use it as a reference if we need some information about “yum”. We will concentrate on the command line version of “yum”, but I would like mention that there is a graphical version called “yumex” that I would recommend. It is not the fastest one, but it is simple to use and it work.  Visit the  “yumex” home page, you can aloso download the RedHat/Centos 5 rpm from here. Main configuration file (/etc/yum.conf) We can say that “yum” configuration break in two parts, the main configuration file yum.conf  located in the /etc directory and the /etc/yum.repos.d directory that contains separated files for each repository that “yum” can connect to, for updating/installing our system. Below is a modified version of the yum.conf file that include comment for every option line, so we could use it as a reference. I think all options, along  with the comments included are self explanatory . # The Main section must exist for yum to do anything[main]# Directory where packages are downloadedcachedir=/var/cache/yum# 0=Remove packages &amp; headers after they are install/update# 1=Keep downloaded packages after updatekeepcache=0# Debug Level. Valid numbers are 0-10, default is 2debuglevel=2# Where yum log file is locatedlogfile=/var/log/yum.log# Distribution Package Name (Fedora=fedora-release, RedHat/Centos=redhat-release)distroverpkg=redhat-release# 1=Complaint when package aleady install is installed, 0=not tolerant# For example, if you request to install foo, bar and baz and baz is installed;# yum won't error out complaining that baz is already installedttolerant=1# 1=Only update the architectures of packages that is installed, 0=Override Checkexactarch=1# Let yum determine if package is obsolete during update (1=Activate 0=Deactivate)obsoletes=1# Confirms that all packages are cryptographically verifiedgpgcheck=1# 1=Enabling yum plugins, 0=Disable yum plugins# Once plugins are enabled in yum.conf, you may install yum plugins and use them.plugins=1# Determine when repositories metedata expire after it is received.# Note: yum-RHN-plugin doesn't honor this.metadata_expire=1h# Some package (like kernel) can only be install and not updated# So here we would keep 5 versions of the kernel.# When the sixth one is installed, the oldest one will get deleted.installonly_limit = 5# List of packages to exclude from updates or installs.# Uncomment below if you want to autoupdate also the kernel rpms# Reboot is necessary to use the new kernel, once installed.# exclude=kernel*# PUT YOUR REPOS HERE OR IN separate files named file.repo# in /etc/yum.repos.d# Yum repository directory (/etc/yum.repos.d) In the “/etc/yum.repos.d”  directory, we will find one file for each repository we want to use to download or install packages. In a simple RedHat installation we will have one file, name “rhel-debuginfo.repo”. You can find the content and description of this file below. RedHat standard repository seems to be hidden or hard coded somewhere (check /etc/yum directory). Centos on the other side, have explicitly place 2 files in this directory (CentOS-Base.repo and CentOS-Media.repo), one for installing and updating our system from internet and the other one from CD/DVD. # Section title - Can have multiple sections in the file[rhel-debuginfo]# Friendly name for the repositoryname=Red Hat Enterprise Linux $releasever - $basearch - Debug# Full URL to the packages (Can be http:// frp:// or file://)Baseurl=ftp://ftp.redhat.com/pub/redhat/linux/enterprise/$releasever/en/os/$basearch/Debuginfo/# Activate(1) or De-Activate(0) the repositoryenable=1# Enable(1)/Disable(0) - Packages cryptographic checkgpgcheck=1 # GPG key used to verify RPM packages built and signed by Red Hat/Centos /Fedoragpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-releaseThere are many additional repositories that we can subscribe for our RedHat/Centos/Fedora server. For example, there is the “Extra Packages for Enterprise Linux (EPEL)“, you can find the procedure for subscribing to it, but basically you download and install the RHEL4 and RHEL5 rpm. There is also the RPMforge repository where you will find packages for RedHat/Centos. Download the RedHat 5/Centos 5 rpm or the RedHat 4/Centos 4 rpm and follow the same procedure describe above for EPEL repository. There is also the DAG site and you can subscribe to the repository from this page. Example, subscribing to EPEL RedHat 5 repository ; GPG Repositories keys before subscribingroot@rhel5:/etc/yum.repos.d# ls -l /etc/pki/rpm-gpg/total 16-rw-r--r-- 1 root root 1512 Mar 16 21:30 RPM-GPG-KEY-beta-rw-r--r-- 1 root root 1504 Mar 16 21:30 RPM-GPG-KEY-CentOS-5Yum repository directory beforeroot@rhel5:/etc/yum.repos.d# ls -ltotal 16-rw-r--r-- 1 root root 2323 Mar 16 21:30 CentOS-Base.repo-rw-r--r-- 1 root root  626 Mar 16 21:30 CentOS-Media.reporoot@rhel5:/etc/yum.repos.d#Subcribing to EPEL RedHat 5 repository# rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-3.noarch.rpmRetrieving http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-3.noarch.rpmwarning: /var/tmp/rpm-xfer.hoNaf4: Header V3 DSA signature: NOKEY, key ID 217521f6Preparing...                ########################################### [100%] 1:epel-release           ########################################### [100%]Yum repository directory after subscribingroot@rhel5:/etc/yum.repos.d# ls -ltotal 24-rw-r--r-- 1 root root 2323 Mar 16 21:30 CentOS-Base.repo-rw-r--r-- 1 root root  626 Mar 16 21:30 CentOS-Media.repo-rw-r--r-- 1 root root  954 Apr 25  2008 epel.repo-rw-r--r-- 1 root root 1054 Apr 25  2008 epel-testing.repoGPG Repositories keys after subscribingroot@rhel5:/etc/yum.repos.d# ls -l /etc/pki/rpm-gpg/total 20-rw-r--r-- 1 root root 1512 Mar 16 21:30 RPM-GPG-KEY-beta-rw-r--r-- 1 root root 1504 Mar 16 21:30 RPM-GPG-KEY-CentOS-5-rw-r--r-- 1 root root 1698 Apr  3  2007 RPM-GPG-KEY-EPELroot@rhel5:/etc/yum.repos.d#Always be careful when you subscribe to a new repositories, you may encounter problem on some update afterward. If you do use additional repositories, I would suggest that you activate it to download the needed packages and then deactivate it by changing the line “enable=1” to “enable=0”, in the proper file in /etc/yum.repos.d directory. If you ever need again, just activate the “enable” line. In the next article, we will focus on the using the “yum” command itself, see you soon. ","categories": ["Admin"],
        "tags": ["Admin","rpm","yum"],
        "url": "/index.php/2009/09/04/yum-revisited-part-1/"
      },{
        "title": "Yum Revisited (Part 2)",
        "excerpt":" Here is the second article dedicated to the “yum” command. We will demonstrate some useful option of the command and how-to recover in some problematic situation. Keeping your system up to date is important, knowing how to do it and how to correct some issue related to rpm are also important. So let’s see if everyone can find something new about the “yum” command and see if we can apply it in our daily system admin job. You can also consult the “yum” website or the “yum” wiki to obtain more information. As always, I will try to make this article as useful as it can be, so we  can all come back to it and use it as a reference to the “yum” command. Checking if update are available Let’s say you want to be advise when new update are available and want to be emailed with the list of packages included in the update.  When we run the “yum” command with the “check-update” parameter, it actually go and check if any update are available at the repository you have defined in your “/etc/yum.repos.d” directory. If any update are available, they will be listed and the program exit code returned will be 100. If no update are available then the exit code will be 0. # yum check-update ; echo $?Loaded plugins: changelog, fastestmirror, prioritiesLoading mirror speeds from cached hostfile* base: mirrors.portafixe.com* updates: mirrors.portafixe.com* addons: mirrors.portafixe.com* extras: mirrors.portafixe.comcman.i386                                2.0.98-1.el5_3.7       updatesksh.i386                                 20080202-2.el5_3.1     updatesopenais.i386                             0.80.3-22.el5_3.9      updatesrgmanager.i386                           2.0.46-1.el5.centos.4  updatestzdata.noarch                            2009k-1.el5            updates100#We can easily make a little script that we can put in our system crontab file, that will check if any update are available. If there are any, then a list of the updated package will be send to you by email #!/bin/sh/usr/bin/yum check-update &gt; /tmp/cu$$ 2&gt;&amp;1RET=$?if [ $RET -eq 100 ]; then   cat /tmp/cu$$ | mail -s \"System Update Available\" yourname@gmail.comfirm /tmp/cu$$ &gt; /dev/null 2&gt;&amp;1Updating your system To apply all the update available for your system, use the “yum update” command. Updated packages will be downloaded and then a confirmation will be ask before applying them. If you wish to download and install all the update without confirmation use “-y” parameter to skip the confirmation. # yum -y updateLoaded plugins: downloadonly, fastestmirrorLoading mirror speeds from cached hostfile * extras: mirrors.portafixe.com * base: mirrors.portafixe.com * updates: mirrors.portafixe.com * addons: mirrors.portafixe.comSetting up Update ProcessNo Packages marked for Update#Removing a package To remove a package, simply specify the name of the package to be remove, using the “yum erase” command. # yum erase bindWhat RPM provide this file ? Let’s say, you need a file, a library or a program and you are wondering what package is providing it. Well, there are two ways you can find what rpm include the file you are searching. If the file is already installed on your server and you want to know what package is supplying it, you can use the ” rpm” command to find it. But you have to specify the full path of the program in order to work. As an example, let’s say you want to know what package is supplying the “awk” program and that it is already installed on your server, you can use the instruction below. # rpm -qf awk   (Need to specify full path &amp; must exist on your server)error: file /awk: No such file or directory# Must be on server &amp; need to specify full path in order to find the rpm# type awkawk is /usr/bin/awk# rpm -qf /usr/bin/awkgawk-3.1.5-14.el5#But let’s say the file, program or library you are searching is not installed on your server. The rpm command will not be useful in that situation, this is when the ” yum”  command can help us. In the example below, we are searching for the program “compress”. We will use the “yum” command with the “provides” option and then the “*/compress” parameters. By specifying the “*/compress”, we are telling “yum” to display matching file that end with ” compress”  and that it could in any (*) directory. I am sure we will use this command often from now on, right ? # yum provides */compress   (We do not have to know where the program is or will be located)Loaded plugins: changelog, fastestmirror, prioritiesLoading mirror speeds from cached hostfile * base: centos.mirror.iweb.ca * updates: centos.mirror.iweb.ca * addons: centos.mirror.iweb.ca * extras: centos.mirror.iweb.cancompress-4.2.4-47.i386 : Fast compression and decompression utilities.Matched from:Filename    : /usr/bin/compress#Using yum to download package without installing them  There are situation when you only need to download the package without installing it. By using the option “–downloadonly” of the “yum install” command, we can do just that. But first, we need to install the plugins “yum-downloadonly” to add that functionality to the “yum” command. # yum install -y yum-downloadonlyAfter installing the plugin, when ever we need to download a package without installing it, we can use the “–downloadonly” option of the “yum install” command to do it. By default, the package will be downloaded in the directory “/var/cache/yum/base/packages”. If you need to download the package in a particular directory, you can specify it with the “–downloaddir” option (example below). # yum install -y --downloadonly --downloaddir=/tmp zshLoaded plugins: changelog, downloadonly, rhnpluginSetting up Install ProcessParsing package install argumentsResolving Dependencies--&gt; Running transaction check---&gt; Package zsh.i386 0:4.2.6-3.el5 set to be updated--&gt; Finished Dependency ResolutionDependencies Resolved================================================================== Package         Arch       Version       Repository         Size==================================================================Installing: zsh             i386      4.2.6-3.el5  rhel-i386-server-5   1.7 MTransaction Summary==================================================================Install      1 Package(s)Update       0 Package(s)Remove       0 Package(s)Total size: 1.7 MDownloading Packages:exiting because --downloadonly specified## ls -l /tmp/zsh*-rw-r--r-- 1 root root 1787914 May  6 11:31 /tmp/zsh-4.2.6-3.el5.i386.rpm#Installing a local rpm and resolving dependencies Let’s say you have a rpm package on your server that you want to install. You have tried to install it with the regular “rpm” install command, but the package have some rpm dependencies that you do not have. You can then use the “yum localinstall” command to install your package and let “yum” try to resolve these dependencies. For example, we have a package named “shutter”, we cannot install it with the regular rpm command because it has a lot of dependencies. Below, we use to “yum localinstall” to resolve them. The example below represent only a partial screen output. # ls -l shutter-0.70.1-1.ppa2.fc10.noarch.rpm -rw-rw-r-- 1 jacques jacques 780953 Sep 19 12:02 shutter-0.70.1-1.ppa2.fc10.noarch.rpm# # yum localinstall shutter-0.70.1-1.ppa2.fc10.noarch.rpm Loaded plugins: downloadonly, fastestmirrorSetting up Local Package ProcessExamining shutter-0.70.1-1.ppa2.fc10.noarch.rpm: shutter-0.70.1-1.ppa2.fc10.noarchMarking shutter-0.70.1-1.ppa2.fc10.noarch.rpm to be installedLoading mirror speeds from cached hostfile * extras: mirrors.portafixe.com * base: mirrors.portafixe.com * updates: mirrors.portafixe.com * addons: mirrors.portafixe.comResolving Dependencies--&gt; Running transaction check---&gt; Package shutter.noarch 0:0.70.1-1.ppa2.fc10 set to be updated--&gt; Processing Dependency: gnome-web-photo for package: shutter--&gt; Processing Dependency: gtklp for package: shutter--&gt; Processing Dependency: perl(Gnome2) for package: shutter--&gt; Processing Dependency: perl(Gnome2::Canvas) for package: shutter--&gt; Processing Dependency: perl(Gnome2::GConf) for package: shutter--&gt; Processing Dependency: perl(Gnome2::VFS) for package: shutter--&gt; Processing Dependency: perl(Gnome2::Wnck) for package: shutter--&gt; Processing Dependency: perl(Goo::Canvas) for package: shutter--&gt; Processing Dependency: perl(Gtk2) for package: shutter........Listing packages With the “list” parameter as you can guess, we will obtain a list of the packages available. With no parameter, the “list” will list all packages available. On the last column displayed, we will notice that it will informed us if the package is actually installed or there is an update for it and if it is not installed it will display the repository that offer the package. root@rhel5:~# yum list | grep -i openssh or yum list openssh*openssh.i386                              4.3p2-29.el5                 installedopenssh-askpass.i386                      4.3p2-29.el5                 installedopenssh-clients.i386                      4.3p2-29.el5                 installedopenssh-server.i386                       4.3p2-29.el5                 installedroot@rhel5:~# yum list | grep -i openswanopenswan.i386                             2.6.14-1.el5_3.3             updatesopenswan-doc.i386                         2.6.14-1.el5_3.3             updatesroot@rhel5:~# yum list | grep -i openvpnNetworkManager-openvpn.i386               1:0.7.0-18.svn11.el5.1       epelopenvpn.i386                              2.1-0.29.rc15.el5            epelopenvpn-auth-ldap.i386                    2.0.3-3.el5                  epelroot@rhel5:~#Search for pattern in all packages name, description and summary The search option checks the names, descriptions, summaries and listed package maintainers of all of the available packages to find those that match. For example, to search for all packages that relate to “zip”, type: # yum search zipLoaded plugins: downloadonly, fastestmirrorLoading mirror speeds from cached hostfile * extras: mirrors.portafixe.com * base: mirrors.portafixe.com * updates: mirrors.portafixe.com * addons: mirrors.portafixe.com======================= Matched: zip =================================================mc.i386 : User-friendly text console file manager and visual shellkdeutils.i386 : K Desktop Environment - Utilitiesbzip2.i386 : A file compression utility.bzip2-devel.i386 : Header files and libraries for developing apps which will use bzip2.bzip2-libs.i386 : Libraries for applications using bzip2eject.i386 : A program that ejects removable media using software control.gzip.i386 : The GNU data compression program.java-1.4.2-gcj-compat-src.i386 : Source files for libgcjlibgsf.i386 : GNOME Structured File librarymikmod.i386 : A MOD music file player.mono-core.i386 : The Mono CIL runtime, suitable for running .NET codencompress.i386 : Fast compression and decompression utilities.perl-Archive-Tar.noarch : A module for Perl manipulation of .tar filesperl-Archive-Zip.noarch : Perl library for accessing Zip archivesperl-Compress-Zlib.i386 : A module providing Perl interfaces to the zlib compression library.perl-String-CRC32.i386 : Perl interface for cyclic redundency check generationrar.i386 : RAR archiver to create and manage RAR archivesunzip.i386 : A utility for unpacking zip files.xarchiver.i386 : Archive manager for Xfcezip.i386 : A file compression and packaging utility compatible with PKZIP.zlib.i386 : The zlib compression and decompression library.zlib-devel.i386 : Header files and libraries for Zlib development.[root@boris packages]#We can use any of the standard wildcard characters to run any search option with a partial word or name: ? to represent any one character, and * to mean zero or more characters. Always add the escape character () before wildcards. Getting information about a package The “info” parameter allow you to display information about the package you specified. # yum info pythonLoaded plugins: downloadonly, fastestmirrorLoading mirror speeds from cached hostfile * extras: mirrors.portafixe.com * base: mirrors.portafixe.com * updates: mirrors.portafixe.com * addons: mirrors.portafixe.comInstalled PackagesName       : pythonArch       : i386Version    : 2.4.3Release    : 24.el5_3.6Size       : 21 MRepo       : installedSummary    : An interpreted, interactive, object-oriented programming language.URL        : http://www.python.org/License    : PSF - see LICENSEDescription:Python is an interpreted, interactive, object-oriented programming language often compared to Tcl, Perl, Scheme or Java. Pythonincludes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to manysystem calls and libraries, as well as to various windowing systems (X11, Motif, Tk, Mac and MFC).  Programmers can write newbuilt-in modules for Python in C or C++. Python can be used as an extension language for applications that need a programmableinterface. This package contains most of the standard Python modules, as well as modules for interfacing to the Tix widget set forTk and RPM.  Note that documentation for Python is provided in the python-docs package.#**Correcting yum operation error ** You may sometime encounter situation when trying to update your system, you keep getting error. This can occur, when download have been have been terminated abnormally. The first thing we should do in that situation is to run the “yum clean all” command. This will clear the yum cache directory (/var/cache/yum) and most of the time it resolve the problem. # yum clean allLoaded plugins: downloadonly, fastestmirrorCleaning up EverythingCleaning up list of fastest mirrors#Listing package group This “grouplist” option, list the package group that are installed on your server and that are available for you to download. The example below was run on a Centos 5 server, on a Redhat server some package group may not show. Centos have more package group than Red hat. The list have also been shortened, to take less space on this page. # yum grouplistInstalled Groups:   Administration Tools   DNS Name Server   FTP Server   Mail Server   Multimedia   MySQL Database   ...   Text-based Internet   Web Server   Windows File Server   X Software Development   X Window SystemAvailable Groups:   Development Tools   GNOME Software Development    ...   News Server   Web Development   Window ManagersDone#Getting information about a package group The “groupinfo” option of the “yum” command display the list the packages that are part of the specified group. The “Default Packages” section, list the packaged that will be installed when that group is install. The “Mandatory” section, list packages that requires to be installed for the package group to work. Depending on the group you specify, there may be a “Optional Packages” section in the list, these packages are the part of the group but won’t be install by default, you will need to install them one by one should you require one of them. # yum groupinfo Graphics\"[root@boris ~]# yum groupinfo \"DNS Name Server\"Loaded plugins: downloadonly, fastestmirrorSetting up Group ProcessLoading mirror speeds from cached hostfile * extras: centos.mirror.iweb.ca * base: centos.mirror.iweb.ca * updates: centos.mirror.iweb.ca * addons: centos.mirror.iweb.caGroup: DNS Name Server Description: This package group allows you to run a DNS name server (BIND) on the system. Mandatory Packages:   bind Default Packages:   bind-chroot#Installing a package group  As you may already guess, the “groupinstall” option allow you to install the default (and required if needed) of the specified group. In the example below, we have install the “DNS Name Server” group. root@anemone:/# yum groupinstall \"DNS Name Server\"Package 30:bind-9.3.4-10.P1.el5_3.3.i386 already installed and latest versionResolving Dependencies--&gt; Running transaction check---&gt; Package bind-chroot.i386 30:9.3.4-10.P1.el5_3.3 set to be updated--&gt; Finished Dependency ResolutionDependencies Resolved=============================================== Package      Arch    Version===============================================Installing: bind-chroot  i386   30:9.3.4-10.P1.el5_3.3     Transaction Summary===============================================Install      1 Package(s)Update       0 Package(s)Remove       0 Package(s)         Total download size: 42 kIs this ok [y/N]: yDownloading Packages:bind-chroot-9.3.4-10.P1.el5_3.3.i386.rpm                        |  42 kB     00:00Running rpm_check_debugRunning Transaction TestFinished Transaction TestTransaction Test SucceededRunning Transaction  Installing     : bind-chroot                                       [1/1]Installed: bind-chroot.i386 30:9.3.4-10.P1.el5_3.3Complete!#","categories": ["Admin"],
        "tags": ["Admin","rpm","yum"],
        "url": "/index.php/2009/09/20/yum-revisited-part-2/"
      },{
        "title": "Secure Shell Filesystem",
        "excerpt":"In this article, we are looking at SSHFS, the Secure Shell Filesystem. We can use it to mount a remote filesystem using the SSH Protocol.  So the information flowing between the two systems is completely encrypted. SSHFS is a client based application, so beside the SSH server, there is nothing to installed on the remote server to use it.  FUSE is a linux kernel module that allow non-privilege user to mount their own filesystem without the help of any kernel code. One of the interesting feature of SSHFS is that you can securely mount a filesystem over the internet, this is impossible with Samba and not very secure with NFS. If you like more information on SSHFS, you can visit the  SSHFS homepage and the Wiki of the SSHFS package. There is also a YouTube video that show how to use SSHFS on a Fedora system. For those interested in a windows version of sshfs, there is a free version available at the Dokan site, you need to install the Dokan Library first, then install SSHFS. I have done some simple test with it and I didn’t had any problem. Installing fuse and fuse-sshfs FUSE and FUSE-SSHFS use the ssh protocol, so SSH needs to be installed on our client system. The only required package on the remote system,  is “openssh” (may work with other version of ssh). The package FUSE and FUSE-SSHFS  don’t need to be install on the remote system, only on the local server.  The first thing we  need to do is to get the latest version the “fuse” at this page and “fuse-sshfs” packages from this page and install them on our local system. The package “fuse” is now part of the RedHat/Centos 5.4, but you still need to get “fuse-sshfs” cause it isn’t included. Should the other site be unresponsive, you can download the rpm from Linternux site.   &lt;/p&gt;                RedHat/Centos 5                  fuse-2.7.4-1.el5.rf.i386.rpm                  fuse-sshfs-2.2-5.el5.i386.rpm                    RedHat/Centos 4                  fuse-2.7.4-1.el4.rf.i386.rpm                  fuse-sshfs-2.2-1.el4.rf.i386.rpm                    RedHat/Centos 3                  fuse-2.7.4-1.el3.rf.i386.rpm                   fuse-sshfs-2.2-1.el3.rf.i386.rpm                    Fedora 10                  fuse-2.7.4-2.fc10.i386.rpm                  fuse-sshfs-2.2-5.fc10.i386.rpm                    Fedora 11                  fuse-2.7.4-3.fc11.i586.rpm                  fuse-sshfs-2.2-2.fc11.i586.rpm               &lt;/center&gt;       # ls -ltotal 296-rw-rw-r-- 1 jacques jacques 255149 Sep  6 13:15 fuse-2.7.3-1.el5.rf.i386.rpm-rw-rw-r-- 1 jacques jacques  43203 Sep  6 13:15 fuse-sshfs-1.9-1.el5.rf.i386.rpm# rpm -ivh fuse*warning: fuse-2.7.3-1.el5.rf.i386.rpm: Header V3 DSA signature: NOKEY, key ID 6b8d79e6Preparing...             ########################################### [100%]1:fuse                   ########################################### [ 50%]2:fuse-sshfs             ########################################### [100%]#                   Mounting the filesystem           You will notice that all of the commands we used below are done with a normal user account, you can use &#8220;root&#8221; if needed but I would recommend sticking with your user account.  Now we need to create our SSHFS mount point, it is important that the user that will do the sshfs mount be part of the group &#8220;fuse&#8221;, otherwise  you will get this error message &#8220;fuse: failed to open /dev/fuse: Permission denied&#8221;. So, in the example below, we will create the mount point &#8220;remdir&#8221; in our home directory. We can then issue the &#8220;sshfs&#8221; command to log on the remote system with the user &#8220;jacques&#8221; and mount the remote directory named &#8220;/home/jacques&#8221;  on our local directory &#8220;/home/jacques/remdir&#8221;. The password of the user we selected will be prompted and then the sshfs filesystem will be mounted. To confirm that the filesystem is mounted, we issue the &#8220;df -h&#8221; command.       [jacques@local ~]$ pwd/home/jacques[jacques@local ~]$ mkdir remdir[jacques@local ~]$ sshfs jacques@remote_host:/home/jacques /home/jacques/workdirjacques@remote_host's password: xxxxxxxxxx[jacques@local ~]$ df -h /home/jacques/remdirFilesystem                                 Size  Used Avail Use%  Mounted onsshfs#jacques@remote_host:/home/jacques   1000G    0  1000G   0%  /home/jacques/remdir[jacques@local ~]$        You will notice that the data of the filesystem presented by the &#8220;df -h&#8221; is wrong, this seems to be normal at this point and do not cause any problem. Every test I made, I would get the same value so don&#8217;t rely on these number. If you do not specify the remote directory, the HOME directory is use.           Unmounting the filesystem           When you need to unmount the filesystem, we will use the &#8220;fusermount&#8221; command with the &#8220;-u&#8221; parameter.       [jacques@local ~]$ fusermount -u /home/jacques/remdir        Hope that you have found this article interesting. The Secure Shell Filesystem may become handy is some situation. So keep coming back, I have a lot of ideas for new articles (but not much time) and I hope to see you soon.   ","categories": ["Network","Storage"],
        "tags": ["Network","ssh"],
        "url": "/index.php/2009/10/04/secure-shell-filesystem/"
      },{
        "title": "Using SSH and SCP without entering password",
        "excerpt":"When administrating a lot of Unix servers, there are some situation when you need to run a script from one server to another without entering a password. For example, let’s say that you need to take a cold backup of a Oracle database, but before starting it, you need to stop the application running on another server. In your Oracle backup script, you could “ssh” to application server and run a script that would stop the application before starting the backup.  But to do that with a script, you need a way to log on the application server without having to enter a password. In this article, we will demonstrate how to configure SSH in such a way that it will allow you to log from one server to another, without having to enter a password.  Some environment are using the OpenSSH version on their Linux servers and the commercial Tectia SSH on the AIX servers. OpenSSH and Tectia SSH don’t have the same keys format and depending on the version you are running,  making an automated connection between these two version can become tricky. In our examples, we will demonstrate the setup require, so that user “robert” is able to log from server1 to server2 without having to enter a password in a mixed environment of OpenSSH and Tectia SSH. OpenSSH server configuration (/etc/ssh/sshd_config) If you are using OpenSSH and you have secure your ssh environnent, chance are that you disable direct “root” access to your server with the line “PermitRootLogin no” in your ssh daemon configuration file. If you change that line with “PermitRootLogin without-password”, then direct login to “root” would still be refuse.  But, if you have configure your server to accept public key identification (PubkeyAuthentication yes) and that the proper setup is done, you should be able to log on the server with no password.  Below is the Openssh configuration file that I use for all the examples below.**** Port                     22Protocol                 2SyslogFacility           AUTHSyslogFacility           AUTHPRIVLoginGraceTime           120PermitRootLogin          without-passwordPubkeyAuthentication    yesHostbasedAuthentication  noPasswordAuthentication  yesRhostsRSAAuthentication  noIgnoreRhosts             yesStrictModes              yesUsePrivilegeSeparation  yesAllowTcpForwarding       noX11Forwarding            yesSubsystem sftp           /usr/libexec/openssh/sftp-serverThe OpenSSH version used for all the examples below is ; # ssh -VOpenSSH_4.3p2, OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008    Tectia SSH server configuration (/etc/ssh2/ssh-server-config.xml) The only action needed to permit public key authentication for users is to list ‘publickey’ as an allowed authentication method in the ssh-server-config.xml file: &lt;authentication-methods&gt;  &lt;authentication action=\"allow\"&gt;    &lt;auth-publickey /&gt;    ...  &lt;/authentication&gt;&lt;/authentication-methods&gt;Other authentication methods can also be allowed. Place the least interactive method first. For all the Tectia SSH examples below we used the following version ; # sshg3 -Vsshg3.bin: SSH Tectia Client 6.1.3 on powerpc-ibm-aix5.1.0.0Build: 59Product: SSH Tectia Client** ** ** ** Automating SSH connection from OpenSSH to OpenSSH  This example demonstrate how to setup public key authentication so that user “robert” can log from server1 (OpenSSH) to server2 (OpenSSH), without having to enter a password. 1) Generate the private and public key for user “robert” on server1. robert@server1:~$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/robert/.ssh/id_rsa):Created directory '/home/robert/.ssh'.Enter passphrase (empty for no passphrase): &lt;CR&gt;Enter same passphrase again: &lt;CR&gt;Your identification has been saved in /home/robert/.ssh/id_rsa.Your public key has been saved in /home/robert/.ssh/id_rsa.pub.The key fingerprint is:6f:17:ac:ac:b6:9c:13:90:57:aa:ee:1c:b1:e0:93:e2robert@server1robert@server1:~$ cd .sshrobert@server1:~/.ssh$ ls -ltotal 3-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pubrobert@server1:~/.ssh$2) Copy the public key file to a more descriptive name. robert@server1:~/.ssh$ cp id_rsa.pub server1_rsa.pubrobert@server1:~/.ssh$ ls -ltotal 4-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pub-rw-r--r-- 1 robert robert  404 Nov 22 08:24 server1_rsa.pubrobert@server1:~/.ssh$3) Create the .ssh directory on the remote server and copy the public key from server1 onto server2. robert@server2:~$ pwd/home/robertrobert@server2:~$ mkdir .sshrobert@server2:~$ chmod 700 .sshrobert@server2:~$ cd .sshrobert@server2:~/.ssh$ scp robert@server1:/home/robert/.ssh/server1_rsa.pub .The authenticity of host 'server1 (192.168.1.101)' can't be established.RSA key fingerprint is b4:8d:56:71:c9:7e:97:ba:79:87:95:0d:8a:29:fc:9a.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server1,192.168.1.101' (RSA) to the list of known hosts.robert@server1's password: *********server1_rsa.pub                                    100%  404     0.4KB/s   00:004) Add “robert” public key from server1 to the authorized_keys file on server2 robert@server2:~/.ssh$ ls -ltotal 2-rw-r--r-- 1 robert robert 401 Nov 22 08:29 known_hosts-rw-r--r-- 1 robert robert 404 Nov 22 08:31 server1_rsa.pubrobert@server2:~/.ssh$robert@server2:~/.ssh$ cat server1_rsa.pub &gt;&gt; authorized_keysrobert@server2:~/.ssh$ chmod 644 authorized_keys5) Test our automated ssh connection from server1 to server2 The first time you will need to accept connection. After that first connection, there will be no confirmation needed. robert@server1:~/.ssh$ ssh server2The authenticity of host 'server2 (192.168.1.133)' can't be established.RSA key fingerprint is 28:cc:97:fb:ec:79:94:7f:bf:ef:82:bd:d2:c4:41:d2.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server2,192.168.1.133' (RSA) to the list of known hosts.robert@server2:~$robert@server1:~/.ssh$ ssh server2Last login: Sun Nov 22 08:36:41 2009 from server1.maison.carobert@server2:~$** ** ** ** Automating SSH connection from OpenSSH to Tectia SSH  This example demonstrate how to setup public key authentication so that user “robert” can log from server1 (OpenSSH) to server2 (Tectia SSH), without having to enter a password. 1) Generate “robert” private and public keys on the local server (server1). robert@server1:~$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/robert/.ssh/id_rsa):Created directory '/home/robert/.ssh'.Enter passphrase (empty for no passphrase): &lt;CR&gt;Enter same passphrase again: &lt;CR&gt;Your identification has been saved in /home/robert/.ssh/id_rsa.Your public key has been saved in /home/robert/.ssh/id_rsa.pub.The key fingerprint is:6f:17:ac:ac:b6:9c:13:90:57:aa:ee:1c:b1:e0:93:e2robert@server1:~$robert@server1:~$ cd .sshrobert@server1:~/.ssh$ ls -ltotal 3-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pubrobert@server1:~/.ssh$2) Copy the public key to a more descriptive name and convert to Tectia SSH format robert@server1:~/.ssh$ cp id_rsa.pub server1_rsa.pubrobert@server1:~/.ssh$ ssh-keygen -e -f server1_rsa.pub &gt; server1_ssh2.pubrobert@server1:~/.ssh$ ls -ltotal 6-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pub-rw-r--r-- 1 robert robert  401 Nov 22 08:36 known_hosts-rw-r--r-- 1 robert robert  404 Nov 22 08:24 server1_rsa.pub-rw-rw-r-- 1 robert robert  514 Nov 22 10:15 server1_ssh2.pubrobert@server1:~/.ssh$3) From the remote server (server2) get “robert” Tectia SSH public key from server1. robert@server2:~/$ ls -altotal 4drwxr-xr-x   2 robert   staff           512 Nov 22 08:59 .drwxr-xr-x   7 bin      bin             512 Nov 22 08:58 ..-rwxr-----   1 robert   staff           254 Nov 22 08:58 .profile-rw-------   1 robert   staff           110 Nov 22 10:08 .sh_historyrobert@server2:~/$ mkdir .ssh2robert@server2:~/$ chmod 700 .ssh2robert@server2:~/$ cd .ssh2robert@server2:~/$ scpg3 robert@server1:/home/robert/.ssh/server1_ssh2.pub . (replace scpg3 by scp if using V4)robert@server1 password: ********server1_rsa_ssh2.pub                        |   514B |   3.7kiB/s | TOC: 00:00:00 | 100%robert@server2:~/$4) Add “robert” public key on server1 to the authorization file on server2. robert@server2:~/$ echo \"Key server1_ssh2.pub\" &gt;&gt; ~/.ssh2/authorization5) Test our automated ssh connection from server1 to server2 robert@server1:~/.ssh$ ssh robert@server2The authenticity of host 'server2 (192.168.1.130)' can't be established.RSA key fingerprint is cb:98:02:be:4c:0d:80:8e:bc:20:cf:45:03:fc:70:54.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server2,192.168.1.130' (RSA) to the list of known hosts.robert@server2:~/.ssh$ robert@server1:~/.ssh$ ssh robert@server2 dateSun Nov 22 10:16:06 EST 2009robert@server1:~/.ssh$** ** ** ** Automating SSH connection from Tectia SSH to OpenSSH  This example demonstrate how to setup public key authentication so that user “robert” can log from server1 (Tectia SSH) to server2 (OpenSSH), without having to enter a password. 1) Generate  Tectia SSH private and public keys for user “robert” on server1. robert@server1:~/$ ssh-keygen-g3 (use ssh-key if using V4)Generating 2048-bit dsa key pair153 oOOo.oOo.oOoKey generated.2048-bit dsa, robert@server1, Sun Nov 22 2009 19:21:21 -0500Passphrase : &lt;CR&gt;Again      : &lt;CR&gt;Key is stored with NULL passphrase.(You can ignore the following warning if you are generating hostkeys.)This is not recommended. Don't do this unless you know what you're doing.If file system protections fail (someone can access the keyfile),or if the super-user is malicious, your key can be used without the deciphering effort.Private key saved to /home/robert/.ssh2/id_dsa_2048_aPublic key saved to /home/robert/.ssh2/id_dsa_2048_a.pubrobert@server1:~/$1a) Identify the private key name in the identification file (Not needed for version 5 and above) robert@server1:~/ $ echo \"IdKey id_dsa_2048_a\" &gt;&gt; identification2) Copy the public key to a more descriptive name. robert@server1:~/$ pwd/home/robertrobert@server1:~/$ cd .ssh2robert@server1:~/$ ls -ltotal 11-rw-------   1 robert   staff          1389 Nov 22 19:25 id_dsa_2048_a-rw-r--r--   1 robert   staff          1257 Nov 22 19:25 id_dsa_2048_a.pubrobert@server1:~/$ cp id_dsa_2048_a.pub server1_ssh2.pub3) From the remote server (server2) get “robert” Tectia SSH public key from server1. robert@server2:~$ pwd/home/robertrobert@server2:~$ mkdir .sshrobert@server2:~$ chmod 700 .sshrobert@server2:~$ cd .sshrobert@server2:~/.ssh$ scp robert@server1:/home/robert/.ssh2/server1_ssh2.pub .The authenticity of host 'server1' (192.168.1.130)' can't be established.RSA key fingerprint is cb:98:02:be:4c:0d:80:8e:bc:20:cf:45:03:fc:70:54.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server1,192.168.1.130' (RSA) to the list of known hosts.Password Authentication:robert's password: ********server1_ssh2.pub                                            100% 1257     1.2KB/s   00:004) Convert Tectia SSH key to OpenSSH format &amp; add it to the authorization file. robert@server2:~/.ssh$ ssh-keygen -i -f server1_ssh2.pub &gt; server1_ssh.pubrobert@server2:~/.ssh$ cat server1_ssh.pub &gt;&gt; authorized_keysrobert@server2:~/.ssh$ chmod 644 authorized_keys 5) Test “robert” automated ssh connection from server1 to server2 robert@server1:~/$ sshg3 robert@server2Please select how you want to proceed.cancel) Cancel the connection.once) Proceed with the connection but do not save the key.save) Proceed with the connection and save the key for future use.Please select one (cancel, once, save): saveAuthentication successful.Last login: Sun Nov 22 08:38:03 2009 from server1.maison.carobert@server2:~$robert@server1:~/$ sshg3 robert@server1 dateAuthentication successful.Sun Nov 22 19:56:04 EST 2009robert@server1:~/$** ** ** ** Automating SSH connection from Tectia SSH to Tectia SSH  This example demonstrate the step needed so that user “robert” can log from server1 (Tectia SSH) to server2 who is also running Tectia SSH, without having to enter a password. 1) Generate “robert” Tectia SSH private and public keys on server1. robert@server1:~/$ ssh-keygen-g3 (ssh-keygen for version 4)Generating 2048-bit dsa key pair153 oOOo.oOo.oOoKey generated.2048-bit dsa, robert@server1, Sun Nov 22 2009 19:21:21 -0500Passphrase : &lt;CR&gt;Again      : &lt;CR&gt;Key is stored with NULL passphrase.(You can ignore the following warning if you are generating hostkeys.)This is not recommended. Don't do this unless you know what you're doing.If file system protections fail (someone can access the keyfile),or if the super-user is malicious, your key can be used without the deciphering effort.Private key saved to /home/robert/.ssh2/id_dsa_2048_aPublic key saved to /home/robert/.ssh2/id_dsa_2048_a.pubrobert@server1:~/$2) Copy the public key to a more descriptive name. robert@server1:~$ pwd/home/robertrobert@server1:~ $ cd .ssh2robert@server1:~ $ ls -ltotal 11-rw-------   1 robert   staff          1389 Nov 22 19:25 id_dsa_2048_a-rw-r--r--   1 robert   staff          1257 Nov 22 19:25 id_dsa_2048_a.pubrobert@server1:~ $robert@server1:~ $ cp id_dsa_2048_a.pub server1_ssh2.pub3) Identify the private key name in the identification file (Not needed for version 5 and above) robert@server1:~/ $ echo \"IdKey id_dsa_2048_a\" &gt;&gt; identification4) Get “robert” Tectia SSH public key from server1 onto server2. robert@server2:~/$ scpg3 robert@server1:/home/robert/.ssh2/server1_ssh2.pub . (use scp in V4)robert@server1s password: ********server1_ssh2.pub                                   |   514B |   3.7kiB/s | TOC: 00:00:00 | 100%robert@server2:~/$5) Add “robert” public key from  server1 to the authorization file on server2. robert@server2:~/$ echo \"Key server1_ssh2.pub\" &gt;&gt; ~/.ssh2/authorization6) Test our automated ssh connection from server1 to server2 robert@server1:~/$ sshg3 robert@server2Please select how you want to proceed.cancel) Cancel the connection.once) Proceed with the connection but do not save the key.save) Proceed with the connection and save the key for future use.Please select one (cancel, once, save): saveAuthentication successful.Last login: Sun Nov 22 08:38:03 2009 from server1.maison.carobert@server2:~$robert@server1:~/$ sshg3 robert@server1 dateAuthentication successful.Sun Nov 22 19:56:04 EST 2009robert@server1:~/$Hope this article will be usefull for many of us and I hope that you will come back to it when ever you need it. See you soon. ","categories": ["Network"],
        "tags": ["ssh"],
        "url": "/index.php/2009/11/07/ssh-without-password/"
      },{
        "title": "Force user to change password",
        "excerpt":"User is calling and say that he forgot is password. So you need to change his password and for security reason you want to force him to change it upon his first login. The command “chage -d 0” (change aging) will force user to change his password upon first login.Image by Gino Crescoli from Pixabay Change his password # passwd josblowSet expiration date to 0 # chage -d 0","categories": ["useradministration","password"],
        "tags": ["usersadministration","password"],
        "url": "/useradministration/password/force-user-to-change-password-at-next-login/"
      },{
        "title": "Making Date Calculation",
        "excerpt":"You’re doing a script and you need to know what was the date 35 days ago or what will the date be in 21 days. This is where  the “date” command can help you doing that kind of calculation. In this little article we will present some examples to help us making some data calculation. I would like to point out, that all of these date calculation take in consideration the leap year. Image by Amber Avalona from Pixabay Revision 1.1 - 2 March 2021 - Download a pdf version Current date and time             Command      Description      Result                  date      Get/Show current date &amp; time      Sun 28 Feb 2021 17:05:41 EST              date “+%C%y.%m.%d %H:%M:%S”      Current Date/Time YYYY.MM.DD HH:MM:SS      2021.02.28 21:09:17              date “+%C%y.%m.%d %T”      Current Date/Time YYYY.MM.DD HH:MM:SS      2021.02.28 21:09:17              date ‘+%C%y.%m.%d’      Current Date/Time Format YYYY.MM.DD      2021.02.28              date “+%j”      Day of year (001..366)      059              date +%q      Quarter of year (1..4)      1              date +%u      Day of week (1..7); 1 is Monday      7              date +%w      Day of week (0..6); 0 is Sunday      0              date +%U      week number of year (00..53)      09              date +%d      Day of month (e.g., 01)      28              date +%m      Month number (01..12)      02              date +%y      Last two digits of year (00..99)      21              date +%Y      Current Year with century      2021              date +%H      Current Hour (00..23)      21              date +%M      Current Minute (00..59)      09              date +%S      Current second (00..60)      41       Epoch time             Command      Description      Result                  date      Get current date &amp; time      Tue 02 Mar 2021 10:42:09 AM EST              date +%s      Get current epoch time      1614699732              date -d @1614699732 “+%Y/%m/%d %T”      Convert Epoch Time to a Date format      2021/03/02 10:42:12              date –date=’03/02/2021 10:42:12’ +%s      Convert a Date to an Epoch Time      1614699732       Date in the future             Command      Description      Result                  date –date=”35 days”      Date/Time in 35 days      Sun Apr  4 18:12:51 EDT 2021              date –date=”1 month”      Date/Time in one month      Sun Mar 28 18:58:26 EDT 2021              date –date=”this friday”      Date/Time Next Friday      Fri Mar  5 00:00:00 EST 2021              date –date=”next day”      Date/Time Tomorrow      Mon Mar  1 18:01:42 EST 2021              date –date=”tomorrow”      Date/Time Tomorrow      Mon Mar  1 18:01:42 EST 2021              date –date=’fortnight’      Date/Time 15 days ahead      Sun Mar 14 21:30:30 EDT 2021              date –date=’5 fortnight’      Date/Time 5 times 15 days ahead      Sun May  9 21:38:33 EDT 2021              date –date=’2 hour’      Date/Time 2 hours from now      Sun Feb 28 22:43:30 EST 2021              date –date=’20 minute’      Date/Time 20 minutes from now      Sun Feb 28 21:04:49 EST 2021              date -dmonday +%Y/%m/%d      Date of next Monday      2021/03/01              date -d’monday-fortnight ago’ +%Y%m%d      Last Monday - 2 weeks from now      20210215              date –date “next month - $(date +%d) day”      Last Day of Month      Wed 31 Mar 2021 10:30:21 AM EDT              date -dnext-monday +”%Y/%m/%d”      Date/Time of next Monday      2021/03/01              date -d’monday+fortnight’ +”%Y/%m/%d”      Next Monday + 2 weeks from now      2021/02/15              date -d’52+monday’ +”%Y%m%d”      Date of 52th Monday from now      20220221              date -d’monday+14 days’ +”%Y%m%d”      Date of next Monday + 14 Days      20210315       Date in the past             Command      Description      Result                  date –date=’20 minutes ago’      Date/Time 20 minutes ago      Sun Feb 28 20:25:25 EST 2021              date –date=’2 hours ago’      Date/Time 2 hours ago      Sun Feb 28 18:44:20 EST 2021              date –date=’10 days ago’      Date/Time 10 days ago      Thu Feb 18 20:51:01 EST 2021              date –date=’10 weeks ago’      Date/Time 10 weeks ago      Sun Dec 20 20:51:28 EST 2020              date –date=’10 months ago’      Date/Time 10 months      Tue Apr 28 21:52:27 EDT 2020              date –date=’10 year ago’      Date/Time 10 years ago      Mon Feb 28 20:52:54 EST 2011              date –date=”yesterday” +”%Y/%m/%d %T”      Yesterday Date      2021/02/27 20:49:45              date –date=’yesterday’      Yesterday Date/Time      Sat Feb 27 20:49:49 EST 2021              date –date=’fortnight ago’      Date/Time 15 days ago      Sun Feb 14 20:40:06 EST 2021              date -dlast-monday      Date/Time of Last Monday      Mon Feb 22 00:00:00 EST 2021              date -dlast-monday +”%Y/%m/%d”      Date Last Monday      2021/02/22              date -d’monday-14 days’ +”%Y/%m/%d %T”      Two Mondays ago      20210215      ","categories": ["Scripting"],
        "tags": ["Date"],
        "url": "/scripting/making-date-calculation/"
      },{
        "title": "Linux Administration Book for Free",
        "excerpt":"A short post to advise you that you can download for free the “GNU/Linux Advanced Administration” book in PDF forrmat this page, or from this site. The Linux Command LinePro Git See you soon ! ","categories": ["general"],
        "tags": ["sysadmin"],
        "url": "/general/linux-administration-book-for-free/"
      },{
        "title": "Linux Administration Books for Free",
        "excerpt":"A short post to list some free books for Linux users and administrators, take a look you might find one that you would like to have.Image by Gerhard G. from Pixabay Revision 1.1 - 2 March 2021 -   The Linux Command Line          Have a brief look at the book from this page and download the book.        The Pro Git book, written by Scott Chacon and Ben Straub and published by Apress, is available here and download the book.  The Debian Administrator’s Handbook          Written by two Debian developers — Raphaël Hertzog and Roland Mas — the Debian Administrator’s Handbook      Take a look at the home page and download the book.      See you soon ! ","categories": ["general"],
        "tags": ["sysadmin"],
        "url": "/general/linux-administration-books-for-free/"
      },{
        "title": "Using SSH without entering password",
        "excerpt":"Image by Free-Photos from Pixabay In this article, we will demonstrate how to configure SSH in such a way that it will allow you to log from one server to another, without having to enter a password. When administrating a lot of Unix servers, there are some situation when you need to run a script from one server to another without entering a password.  For example, let’s say that you need to take a cold backup of a Oracle database, but before starting it, you need to stop the application running on another server. In your Oracle backup script, you could “ssh” to application server and run a script that would stop the application before starting the backup.  But to do that with a script, you need a way to log on the application server without having to enter a password. Some environment are using the OpenSSH version on their Linux servers and the commercial Tectia SSH on the AIX servers. OpenSSH and Tectia SSH don’t have the same keys format and depending on the version you are running,  making an automated connection between these two version can become tricky. In our examples, we will demonstrate the setup require, so that user “robert” is able to log from server1 to server2 without having to enter a password in a mixed environment of OpenSSH and Tectia SSH. OpenSSH server configuration (/etc/ssh/sshd_config) If you are using OpenSSH and you have secure your ssh environnent, chance are that you disable direct “root” access to your server with the line “PermitRootLogin no” in your ssh daemon configuration file. If you change that line with “PermitRootLogin without-password”, then direct login to “root” would still be refuse.  But, if you have configure your server to accept public key identification (PubkeyAuthentication yes) and that the proper setup is done, you should be able to log on the server with no password.  Below is the Openssh configuration file that I use for all the examples below.**** Port                     22Protocol                 2SyslogFacility           AUTHSyslogFacility           AUTHPRIVLoginGraceTime           120PermitRootLogin          without-passwordPubkeyAuthentication    yesHostbasedAuthentication  noPasswordAuthentication  yesRhostsRSAAuthentication  noIgnoreRhosts             yesStrictModes              yesUsePrivilegeSeparation  yesAllowTcpForwarding       noX11Forwarding            yesSubsystem sftp           /usr/libexec/openssh/sftp-server   The OpenSSH version used for all the examples below is ; # ssh -VOpenSSH_4.3p2, OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008    Tectia SSH server configuration (/etc/ssh2/ssh-server-config.xml) The only action needed to permit public key authentication for users is to list ‘publickey’ as an allowed authentication method in the ssh-server-config.xml file: &lt;authentication-methods&gt;  &lt;authentication action=\"allow\"&gt;    &lt;auth-publickey /&gt;    ...  &lt;/authentication&gt;&lt;/authentication-methods&gt;Other authentication methods can also be allowed. Place the least interactive method first. For all the Tectia SSH examples below we used the following version ; # sshg3 -Vsshg3.bin: SSH Tectia Client 6.1.3 on powerpc-ibm-aix5.1.0.0Build: 59Product: SSH Tectia Client** ** ** ** Automating SSH connection from OpenSSH to OpenSSH  This example demonstrate how to setup public key authentication so that user “robert” can log from server1 (OpenSSH) to server2 (OpenSSH), without having to enter a password. 1) Generate the private and public key for user “robert” on server1. robert@server1:~$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/robert/.ssh/id_rsa):Created directory '/home/robert/.ssh'.Enter passphrase (empty for no passphrase): &lt;CR&gt;Enter same passphrase again: &lt;CR&gt;Your identification has been saved in /home/robert/.ssh/id_rsa.Your public key has been saved in /home/robert/.ssh/id_rsa.pub.The key fingerprint is:6f:17:ac:ac:b6:9c:13:90:57:aa:ee:1c:b1:e0:93:e2robert@server1robert@server1:~$ cd .sshrobert@server1:~/.ssh$ ls -ltotal 3-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pubrobert@server1:~/.ssh$2) Copy the public key file to a more descriptive name. robert@server1:~/.ssh$ cp id_rsa.pub server1_rsa.pubrobert@server1:~/.ssh$ ls -ltotal 4-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pub-rw-r--r-- 1 robert robert  404 Nov 22 08:24 server1_rsa.pubrobert@server1:~/.ssh$3) Create the .ssh directory on the remote server and copy the public key from server1 onto server2. robert@server2:~$ pwd/home/robertrobert@server2:~$ mkdir .sshrobert@server2:~$ chmod 700 .sshrobert@server2:~$ cd .sshrobert@server2:~/.ssh$ scp robert@server1:/home/robert/.ssh/server1_rsa.pub .The authenticity of host 'server1 (192.168.1.101)' can't be established.RSA key fingerprint is b4:8d:56:71:c9:7e:97:ba:79:87:95:0d:8a:29:fc:9a.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server1,192.168.1.101' (RSA) to the list of known hosts.robert@server1's password: *********server1_rsa.pub                                    100%  404     0.4KB/s   00:004) Add “robert” public key from server1 to the authorized_keys file on server2 robert@server2:~/.ssh$ ls -ltotal 2-rw-r--r-- 1 robert robert 401 Nov 22 08:29 known_hosts-rw-r--r-- 1 robert robert 404 Nov 22 08:31 server1_rsa.pubrobert@server2:~/.ssh$robert@server2:~/.ssh$ cat server1_rsa.pub &gt;&gt; authorized_keysrobert@server2:~/.ssh$ chmod 644 authorized_keys5) Test our automated ssh connection from server1 to server2 The first time you will need to accept connection. After that first connection, there will be no confirmation needed. robert@server1:~/.ssh$ ssh server2The authenticity of host 'server2 (192.168.1.133)' can't be established.RSA key fingerprint is 28:cc:97:fb:ec:79:94:7f:bf:ef:82:bd:d2:c4:41:d2.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server2,192.168.1.133' (RSA) to the list of known hosts.robert@server2:~$robert@server1:~/.ssh$ ssh server2Last login: Sun Nov 22 08:36:41 2009 from server1.maison.carobert@server2:~$** ** ** ** Automating SSH connection from OpenSSH to Tectia SSH  This example demonstrate how to setup public key authentication so that user “robert” can log from server1 (OpenSSH) to server2 (Tectia SSH), without having to enter a password. 1) Generate “robert” private and public keys on the local server (server1). robert@server1:~$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/robert/.ssh/id_rsa):Created directory '/home/robert/.ssh'.Enter passphrase (empty for no passphrase): &lt;CR&gt;Enter same passphrase again: &lt;CR&gt;Your identification has been saved in /home/robert/.ssh/id_rsa.Your public key has been saved in /home/robert/.ssh/id_rsa.pub.The key fingerprint is:6f:17:ac:ac:b6:9c:13:90:57:aa:ee:1c:b1:e0:93:e2robert@server1:~$robert@server1:~$ cd .sshrobert@server1:~/.ssh$ ls -ltotal 3-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pubrobert@server1:~/.ssh$2) Copy the public key to a more descriptive name and convert to Tectia SSH format robert@server1:~/.ssh$ cp id_rsa.pub server1_rsa.pubrobert@server1:~/.ssh$ ssh-keygen -e -f server1_rsa.pub &gt; server1_ssh2.pubrobert@server1:~/.ssh$ ls -ltotal 6-rw------- 1 robert robert 1675 Nov 22 08:19 id_rsa-rw-r--r-- 1 robert robert  404 Nov 22 08:19 id_rsa.pub-rw-r--r-- 1 robert robert  401 Nov 22 08:36 known_hosts-rw-r--r-- 1 robert robert  404 Nov 22 08:24 server1_rsa.pub-rw-rw-r-- 1 robert robert  514 Nov 22 10:15 server1_ssh2.pubrobert@server1:~/.ssh$3) From the remote server (server2) get “robert” Tectia SSH public key from server1. robert@server2:~/$ ls -altotal 4drwxr-xr-x   2 robert   staff           512 Nov 22 08:59 .drwxr-xr-x   7 bin      bin             512 Nov 22 08:58 ..-rwxr-----   1 robert   staff           254 Nov 22 08:58 .profile-rw-------   1 robert   staff           110 Nov 22 10:08 .sh_historyrobert@server2:~/$ mkdir .ssh2robert@server2:~/$ chmod 700 .ssh2robert@server2:~/$ cd .ssh2robert@server2:~/$ scpg3 robert@server1:/home/robert/.ssh/server1_ssh2.pub . (replace scpg3 by scp if using V4)robert@server1 password: ********server1_rsa_ssh2.pub                        |   514B |   3.7kiB/s | TOC: 00:00:00 | 100%robert@server2:~/$4) Add “robert” public key on server1 to the authorization file on server2. robert@server2:~/$ echo \"Key server1_ssh2.pub\" &gt;&gt; ~/.ssh2/authorization5) Test our automated ssh connection from server1 to server2 robert@server1:~/.ssh$ ssh robert@server2The authenticity of host 'server2 (192.168.1.130)' can't be established.RSA key fingerprint is cb:98:02:be:4c:0d:80:8e:bc:20:cf:45:03:fc:70:54.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server2,192.168.1.130' (RSA) to the list of known hosts.robert@server2:~/.ssh$ robert@server1:~/.ssh$ ssh robert@server2 dateSun Nov 22 10:16:06 EST 2009robert@server1:~/.ssh$** ** ** ** Automating SSH connection from Tectia SSH to OpenSSH  This example demonstrate how to setup public key authentication so that user “robert” can log from server1 (Tectia SSH) to server2 (OpenSSH), without having to enter a password. 1) Generate  Tectia SSH private and public keys for user “robert” on server1. robert@server1:~/$ ssh-keygen-g3 (use ssh-key if using V4)Generating 2048-bit dsa key pair153 oOOo.oOo.oOoKey generated.2048-bit dsa, robert@server1, Sun Nov 22 2009 19:21:21 -0500Passphrase : &lt;CR&gt;Again      : &lt;CR&gt;Key is stored with NULL passphrase.(You can ignore the following warning if you are generating hostkeys.)This is not recommended. Don't do this unless you know what you're doing.If file system protections fail (someone can access the keyfile),or if the super-user is malicious, your key can be used without the deciphering effort.Private key saved to /home/robert/.ssh2/id_dsa_2048_aPublic key saved to /home/robert/.ssh2/id_dsa_2048_a.pubrobert@server1:~/$1a) Identify the private key name in the identification file (Not needed for version 5 and above) robert@server1:~/ $ echo \"IdKey id_dsa_2048_a\" &gt;&gt; identification2) Copy the public key to a more descriptive name. robert@server1:~/$ pwd/home/robertrobert@server1:~/$ cd .ssh2robert@server1:~/$ ls -ltotal 11-rw-------   1 robert   staff          1389 Nov 22 19:25 id_dsa_2048_a-rw-r--r--   1 robert   staff          1257 Nov 22 19:25 id_dsa_2048_a.pubrobert@server1:~/$ cp id_dsa_2048_a.pub server1_ssh2.pub3) From the remote server (server2) get “robert” Tectia SSH public key from server1. robert@server2:~$ pwd/home/robertrobert@server2:~$ mkdir .sshrobert@server2:~$ chmod 700 .sshrobert@server2:~$ cd .sshrobert@server2:~/.ssh$ scp robert@server1:/home/robert/.ssh2/server1_ssh2.pub .The authenticity of host 'server1' (192.168.1.130)' can't be established.RSA key fingerprint is cb:98:02:be:4c:0d:80:8e:bc:20:cf:45:03:fc:70:54.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'server1,192.168.1.130' (RSA) to the list of known hosts.Password Authentication:robert's password: ********server1_ssh2.pub                                            100% 1257     1.2KB/s   00:004) Convert Tectia SSH key to OpenSSH format &amp; add it to the authorization file. robert@server2:~/.ssh$ ssh-keygen -i -f server1_ssh2.pub &gt; server1_ssh.pubrobert@server2:~/.ssh$ cat server1_ssh.pub &gt;&gt; authorized_keysrobert@server2:~/.ssh$ chmod 644 authorized_keys 5) Test “robert” automated ssh connection from server1 to server2 robert@server1:~/$ sshg3 robert@server2Please select how you want to proceed.cancel) Cancel the connection.once) Proceed with the connection but do not save the key.save) Proceed with the connection and save the key for future use.Please select one (cancel, once, save): saveAuthentication successful.Last login: Sun Nov 22 08:38:03 2009 from server1.maison.carobert@server2:~$robert@server1:~/$ sshg3 robert@server1 dateAuthentication successful.Sun Nov 22 19:56:04 EST 2009robert@server1:~/$** ** ** ** Automating SSH connection from Tectia SSH to Tectia SSH  This example demonstrate the step needed so that user “robert” can log from server1 (Tectia SSH) to server2 who is also running Tectia SSH, without having to enter a password. 1) Generate “robert” Tectia SSH private and public keys on server1. robert@server1:~/$ ssh-keygen-g3 (ssh-keygen for version 4)Generating 2048-bit dsa key pair153 oOOo.oOo.oOoKey generated.2048-bit dsa, robert@server1, Sun Nov 22 2009 19:21:21 -0500Passphrase : &lt;CR&gt;Again      : &lt;CR&gt;Key is stored with NULL passphrase.(You can ignore the following warning if you are generating hostkeys.)This is not recommended. Don't do this unless you know what you're doing.If file system protections fail (someone can access the keyfile),or if the super-user is malicious, your key can be used without the deciphering effort.Private key saved to /home/robert/.ssh2/id_dsa_2048_aPublic key saved to /home/robert/.ssh2/id_dsa_2048_a.pubrobert@server1:~/$2) Copy the public key to a more descriptive name. robert@server1:~$ pwd/home/robertrobert@server1:~ $ cd .ssh2robert@server1:~ $ ls -ltotal 11-rw-------   1 robert   staff          1389 Nov 22 19:25 id_dsa_2048_a-rw-r--r--   1 robert   staff          1257 Nov 22 19:25 id_dsa_2048_a.pubrobert@server1:~ $robert@server1:~ $ cp id_dsa_2048_a.pub server1_ssh2.pub3) Identify the private key name in the identification file (Not needed for version 5 and above) robert@server1:~/ $ echo \"IdKey id_dsa_2048_a\" &gt;&gt; identification4) Get “robert” Tectia SSH public key from server1 onto server2. robert@server2:~/$ scpg3 robert@server1:/home/robert/.ssh2/server1_ssh2.pub . (use scp in V4)robert@server1s password: ********server1_ssh2.pub                                   |   514B |   3.7kiB/s | TOC: 00:00:00 | 100%robert@server2:~/$5) Add “robert” public key from  server1 to the authorization file on server2. robert@server2:~/$ echo \"Key server1_ssh2.pub\" &gt;&gt; ~/.ssh2/authorization6) Test our automated ssh connection from server1 to server2 robert@server1:~/$ sshg3 robert@server2Please select how you want to proceed.cancel) Cancel the connection.once) Proceed with the connection but do not save the key.save) Proceed with the connection and save the key for future use.Please select one (cancel, once, save): saveAuthentication successful.Last login: Sun Nov 22 08:38:03 2009 from server1.maison.carobert@server2:~$robert@server1:~/$ sshg3 robert@server1 dateAuthentication successful.Sun Nov 22 19:56:04 EST 2009robert@server1:~/$Hope this article will be usefull for many of us and I hope that you will come back to it when ever you need it. See you soon. ","categories": ["Network"],
        "tags": ["ssh","scp","sftp"],
        "url": "/network/ssh-and-scp-without-password/"
      }]
